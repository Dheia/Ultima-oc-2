{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./partials/slider/product/product.js","webpack:///./node_modules/@splidejs/splide/dist/js/splide.esm.js","webpack:///./node_modules/@lovata/url-generation/url-generation.js","webpack:///./pages/store/store-card.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","this","slider","init","Splide","type","speed","pagination","width","mount","factory","self","__webpack_modules__","311","__unused_webpack_module","__webpack_exports__","module_Splide","states_namespaceObject","_extends","assign","target","arguments","length","source","apply","CREATED","DESTROYED","IDLE","MOUNTED","MOVING","keys","each","obj","callback","some","index","values","map","isObject","subject","merge","_ref","from","to","toArray","Array","isArray","between","m1","m2","Math","min","max","sprintf","format","replacements","replace","unit","parseFloat","pad","number","toPixel","root","div","applyStyle","position","append","clientWidth","dom_remove","find","elm","selector","querySelector","split","child","parent","tagOrClassName","children","filter","hasClass","tagName","tag","attrs","document","createElement","setAttribute","domify","html","innerHTML","firstChild","elms","forEach","parentElement","removeChild","appendChild","before","ref","insertBefore","styles","prop","style","addOrRemoveClasses","classes","remove","classList","addClass","removeClass","className","contains","getAttribute","removeAttribute","names","getRect","getBoundingClientRect","LOOP","slide","Components","list","endCallback","Elements","on","e","start","destIndex","newIndex","prevIndex","coord","done","options","edgeIndex","Controller","is","rewindSpeed","transition","easing","transform","x","y","fade","slides","track","height","clientHeight","setTimeout","error","message","console","MESSAGE_PREFIX","exist","Error","ROOT","STATUS_CLASSES","active","visible","loading","DEFAULTS","rewind","waitForTransition","fixedWidth","fixedHeight","heightRatio","autoWidth","autoHeight","perPage","perMove","clones","focus","gap","padding","arrows","arrowPath","autoplay","interval","pauseOnHover","pauseOnFocus","resetProgress","lazyLoad","preloadPages","keyboard","drag","dragAngleThreshold","swipeDistanceThreshold","flickVelocityThreshold","flickPower","flickMaxPages","direction","cover","accessibility","slideFocus","isNavigation","trimSpace","updateOnMove","throttle","destroy","breakpoints","container","arrow","prev","next","page","clone","progress","bar","play","pause","spinner","sr","i18n","first","last","slideX","pageX","_defineProperties","props","descriptor","configurable","writable","curr","Element","Event","data","unsubscribe","item","removeEventListener","event","handler","events","addEventListener","push","off","emit","_len","args","_key","core_event","State","set","state","STATES","_o","_i","_c","_e","_t","Constructor","protoProps","staticProps","_proto","Extensions","Transition","_this","components","Component","toLowerCase","compose","component","required","undefined","mounted","visibility","sync","splide","sibling","_this$Event","concat","go","control","wait","add","refresh","completely","_this2","reverse","parseInt","created","JSON","parse","components_elements","Slides","id","window","uid","getClasses","Slide","findParts","collect","register","realIndex","SlideObject","STATUS_UPDATE_EVENTS","isClone","update","restoreStyles","_update","display","isActive","isVisible","ceil","trackRect","slideRect","top","bottom","left","right","isWithin","within","diff","abs","forVisibility","elements_slide","getSlide","getSlides","includeClones","getSlidesByPage","idx","toIndex","splice","images","querySelectorAll","count","img","onload","onerror","loaded","rootClass","floor","controller","isLoop","newOptions","silently","trim","Track","matches","String","match","indicator","sign","toPage","parsePage","hasFocus","pageLength","edge","isRtl","Layout","isVertical","isFade","isRTL","isLoopPending","jump","newPosition","getTrimmedPosition","toCoord","onTransitionEnd","translate","cancel","shift","toPosition","innerSize","totalSize","size","minDistance","Infinity","slideIndex","distance","slideSize","offset","cloneCount","Clones","getCloneCount","slice","cloneDeeply","generateClones","baseCount","dimension","fixedSize","cloneNode","func","timeout","layout","resize","totalHeight","totalWidth","slideHeight","slideWidth","margin","paddingTop","paddingBottom","offsetHeight","vertical","paddingLeft","paddingRight","listRect","offsetWidth","horizontal","getOwnPropertyDescriptor","maxWidth","drag_abs","startCoord","startInfo","currentInfo","isDragging","axis","Drag","disabled","move","passive","end","preventDefault","analyze","cancelable","_start","_end","log","resist","angle","atan","PI","shouldMove","info","velocity","absV","destination","timeStamp","touches","_ref2","clientX","clientY","_ref3","_ref3$x","fromX","_ref3$y","duration","time","click","onClick","stopPropagation","stopImmediatePropagation","capture","PAUSE_FLAGS","updateDisabled","_Components$Controlle","nextIndex","isEnough","createArrow","wrapper","firstElementChild","appendArrows","Pagination","items","li","button","createPagination","updateAttributes","getItem","KEY_MAP","ltr","ArrowLeft","ArrowRight","Left","Right","rtl","ttb","ArrowUp","ArrowDown","Up","Down","a11y","allAttributes","updateSlide","initArrows","controls","updateArrows","prevLabel","nextLabel","initPagination","activeItem","label","join","updatePagination","initNavigation","main","isButton","mainSlide","updateNavigation","Arrows","TRIGGER_KEYS","COMPLETE","Options","Breakpoints","initialOptions","prevPoint","throttledCheck","check","point","mql","matchMedia","sort","Click","Autoplay","flags","elapse","rate","requestAnimationFrame","_pause","step","timestamp","reset","createInterval","switchOn","flag","f","indexOf","Cover","uncover","src","background","LazyLoad","isSequential","isNaN","image","load","loadNext","srcset","Keyboard","Sync","syncMain","syncSibling","moveSibling","A11y","_Core","subClass","superClass","constructor","__proto__","__webpack_module_cache__","definition","sBaseURL","location","origin","pathname","sSearchString","search","substring","obParamList","sParam","iPosition","sFiled","sValue","history","pushState","generateSearchString","arFieldList","sField","obValue","require","cartButton","offerInput","basketWrap","cartWrap","xhr","$","oc","stripeLoadIndicator","show","abort","offer","currentTarget","val","UrlGeneration","request","success","response","complete","hide","_self"],"mappings":"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","file":"/js/store-card.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import Splide from '@splidejs/splide';\r\n\r\nexport default new class ProductSlider {\r\n    constructor() {\r\n        this.slider = '.product-slider'\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        let slider = new Splide(this.slider, {\r\n            type: 'fade',\r\n            speed: 1000,\r\n            pagination: false,\r\n            width: '100%'\r\n        }).mount()\r\n    }\r\n}","/*!\n * Splide.js\n * Version  : 2.4.20\n * License  : MIT\n * Copyright: 2020 Naotoshi Fujita\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Splide\"] = factory();\n\telse\n\t\troot[\"Splide\"] = factory();\n})(self, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 311:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => /* binding */ module_Splide\n});\n\n// NAMESPACE OBJECT: ./src/js/constants/states.js\nvar states_namespaceObject = {};\n__webpack_require__.r(states_namespaceObject);\n__webpack_require__.d(states_namespaceObject, {\n  \"CREATED\": () => CREATED,\n  \"DESTROYED\": () => DESTROYED,\n  \"IDLE\": () => IDLE,\n  \"MOUNTED\": () => MOUNTED,\n  \"MOVING\": () => MOVING\n});\n\n;// CONCATENATED MODULE: ./src/js/core/event.js\n/**\r\n * The function for providing an Event object simply managing events.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The function for providing an Event object simply managing events.\r\n */\n/* harmony default export */ const core_event = (function () {\n  /**\r\n   * Store all event data.\r\n   *\r\n   * @type {Array}\r\n   */\n  var data = [];\n  var Event = {\n    /**\r\n     * Subscribe the given event(s).\r\n     *\r\n     * @param {string}   events  - An event name. Use space to separate multiple events.\r\n     *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\r\n     * @param {function} handler - A callback function.\r\n     * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\r\n     * @param {Object}   options - Optional. Options for addEventListener.\r\n     */\n    on: function on(events, handler, elm, options) {\n      if (elm === void 0) {\n        elm = null;\n      }\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      events.split(' ').forEach(function (event) {\n        if (elm) {\n          elm.addEventListener(event, handler, options);\n        }\n\n        data.push({\n          event: event,\n          handler: handler,\n          elm: elm,\n          options: options\n        });\n      });\n    },\n\n    /**\r\n     * Unsubscribe the given event(s).\r\n     *\r\n     * @param {string}  events - A event name or names split by space.\r\n     * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\r\n     */\n    off: function off(events, elm) {\n      if (elm === void 0) {\n        elm = null;\n      }\n\n      events.split(' ').forEach(function (event) {\n        data = data.filter(function (item) {\n          if (item && item.event === event && item.elm === elm) {\n            unsubscribe(item);\n            return false;\n          }\n\n          return true;\n        });\n      });\n    },\n\n    /**\r\n     * Emit an event.\r\n     * This method is only for custom events.\r\n     *\r\n     * @param {string}  event - An event name.\r\n     * @param {*}       args  - Any number of arguments passed to handlers.\r\n     */\n    emit: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      data.forEach(function (item) {\n        if (!item.elm && item.event.split('.')[0] === event) {\n          item.handler.apply(item, args);\n        }\n      });\n    },\n\n    /**\r\n     * Clear event data.\r\n     */\n    destroy: function destroy() {\n      data.forEach(unsubscribe);\n      data = [];\n    }\n  };\n  /**\r\n   * Remove the registered event listener.\r\n   *\r\n   * @param {Object} item - An object containing event data.\r\n   */\n\n  function unsubscribe(item) {\n    if (item.elm) {\n      item.elm.removeEventListener(item.event, item.handler, item.options);\n    }\n  }\n\n  return Event;\n});\n;// CONCATENATED MODULE: ./src/js/core/state.js\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @param {string|number} initialState - Provide the initial state value.\r\n */\n/* harmony default export */ const state = (function (initialState) {\n  /**\r\n   * Store the current state.\r\n   *\r\n   * @type {string|number}\r\n   */\n  var curr = initialState;\n  return {\n    /**\r\n     * Change state.\r\n     *\r\n     * @param {string|number} state - A new state.\r\n     */\n    set: function set(state) {\n      curr = state;\n    },\n\n    /**\r\n     * Verify if the current state is given one or not.\r\n     *\r\n     * @param {string|number} state - A state name to be verified.\r\n     *\r\n     * @return {boolean} - True if the current state is the given one.\r\n     */\n    is: function is(state) {\n      return state === curr;\n    }\n  };\n});\n;// CONCATENATED MODULE: ./src/js/utils/object.js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\r\n * Some utility functions related with Object, supporting IE.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\nvar keys = Object.keys;\n/**\r\n * Iterate an object like Array.forEach.\r\n * IE doesn't support forEach of HTMLCollection.\r\n *\r\n * @param {Object}    obj       - An object.\r\n * @param {function}  callback  - A function handling each value. Arguments are value, property and index.\r\n */\n\nfunction each(obj, callback) {\n  keys(obj).some(function (key, index) {\n    return callback(obj[key], key, index);\n  });\n}\n/**\r\n * Return values of the given object as an array.\r\n * IE doesn't support Object.values.\r\n *\r\n * @param {Object} obj - An object.\r\n *\r\n * @return {Array} - An array containing all values of the given object.\r\n */\n\nfunction values(obj) {\n  return keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\n/**\r\n * Check if the given subject is object or not.\r\n *\r\n * @param {*} subject - A subject to be verified.\r\n *\r\n * @return {boolean} - True if object, false otherwise.\r\n */\n\nfunction isObject(subject) {\n  return typeof subject === 'object';\n}\n/**\r\n * Merge two objects deeply.\r\n *\r\n * @param {Object} to   - An object where \"from\" is merged.\r\n * @param {Object} from - An object merged to \"to\".\r\n *\r\n * @return {Object} - A merged object.\r\n */\n\nfunction merge(_ref, from) {\n  var to = _extends({}, _ref);\n\n  each(from, function (value, key) {\n    if (isObject(value)) {\n      if (!isObject(to[key])) {\n        to[key] = {};\n      }\n\n      to[key] = merge(to[key], value);\n    } else {\n      to[key] = value;\n    }\n  });\n  return to;\n}\n/**\r\n * Assign all properties \"from\" to \"to\" object.\r\n *\r\n * @param {Object} to   - An object where properties are assigned.\r\n * @param {Object} from - An object whose properties are assigned to \"to\".\r\n *\r\n * @return {Object} - An assigned object.\r\n */\n\nfunction object_assign(to, from) {\n  keys(from).forEach(function (key) {\n    if (!to[key]) {\n      Object.defineProperty(to, key, Object.getOwnPropertyDescriptor(from, key));\n    }\n  });\n  return to;\n}\n;// CONCATENATED MODULE: ./src/js/utils/utils.js\n/**\r\n * A package of some miscellaneous utility functions.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Convert the given value to array.\r\n *\r\n * @param {*} value - Any value.\r\n *\r\n * @return {*[]} - Array containing the given value.\r\n */\n\nfunction toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n/**\r\n * Check if the given value is between min and max.\r\n * Min will be returned when the value is less than min or max will do when greater than max.\r\n *\r\n * @param {number} value - A number to be checked.\r\n * @param {number} m1    - Minimum or maximum number.\r\n * @param {number} m2    - Maximum or minimum number.\r\n *\r\n * @return {number} - A value itself, min or max.\r\n */\n\nfunction between(value, m1, m2) {\n  return Math.min(Math.max(value, m1 > m2 ? m2 : m1), m1 > m2 ? m1 : m2);\n}\n/**\r\n * The sprintf method with minimum functionality.\r\n *\r\n * @param {string}       format       - The string format.\r\n * @param {string|Array} replacements - Replacements accepting multiple arguments.\r\n *\r\n * @returns {string} - Converted string.\r\n */\n\nfunction sprintf(format, replacements) {\n  var i = 0;\n  return format.replace(/%s/g, function () {\n    return toArray(replacements)[i++];\n  });\n}\n/**\r\n * Append px unit to the given subject if necessary.\r\n *\r\n * @param {number|string} value - A value that may not include an unit.\r\n *\r\n * @return {string} - If the value is string, return itself.\r\n *                    If number, do value + \"px\". An empty string, otherwise.\r\n */\n\nfunction unit(value) {\n  var type = typeof value;\n\n  if (type === 'number' && value > 0) {\n    return parseFloat(value) + 'px';\n  }\n\n  return type === 'string' ? value : '';\n}\n/**\r\n * Pad start with 0.\r\n *\r\n * @param {number} number - A number to be filled with 0.\r\n *\r\n * @return {string|number} - Padded number.\r\n */\n\nfunction pad(number) {\n  return number < 10 ? '0' + number : number;\n}\n/**\r\n * Convert the given value to pixel.\r\n *\r\n * @param {Element}       root  - Root element where a dummy div is appended.\r\n * @param {string|number} value - CSS value to be converted, such as 10rem.\r\n *\r\n * @return {number} - Pixel.\r\n */\n\nfunction toPixel(root, value) {\n  if (typeof value === 'string') {\n    var div = create('div', {});\n    applyStyle(div, {\n      position: 'absolute',\n      width: value\n    });\n    append(root, div);\n    value = div.clientWidth;\n    dom_remove(div);\n  }\n\n  return +value || 0;\n}\n;// CONCATENATED MODULE: ./src/js/utils/dom.js\n/**\r\n * Some utility functions related with DOM.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Find the first element matching the given selector.\r\n * Be aware that all selectors after a space are ignored.\r\n *\r\n * @param {Element|Node}  elm       - An ancestor element.\r\n * @param {string}        selector  - DOMString.\r\n *\r\n * @return {Element|null} - A found element or null.\r\n */\n\nfunction find(elm, selector) {\n  return elm ? elm.querySelector(selector.split(' ')[0]) : null;\n}\n/**\r\n * Find a first child having the given tag or class name.\r\n *\r\n * @param {Element} parent         - A parent element.\r\n * @param {string}  tagOrClassName - A tag or class name.\r\n *\r\n * @return {Element|undefined} - A found element on success or undefined on failure.\r\n */\n\nfunction child(parent, tagOrClassName) {\n  return children(parent, tagOrClassName)[0];\n}\n/**\r\n * Return chile elements that matches the provided tag or class name.\r\n *\r\n * @param {Element} parent         - A parent element.\r\n * @param {string}  tagOrClassName - A tag or class name.\r\n *\r\n * @return {Element[]} - Found elements.\r\n */\n\nfunction children(parent, tagOrClassName) {\n  if (parent) {\n    return values(parent.children).filter(function (child) {\n      return hasClass(child, tagOrClassName.split(' ')[0]) || child.tagName === tagOrClassName;\n    });\n  }\n\n  return [];\n}\n/**\r\n * Create an element with some optional attributes.\r\n *\r\n * @param {string} tag   - A tag name.\r\n * @param {Object} attrs - An object any attribute pairs of name and value.\r\n *\r\n * @return {Element} - A created element.\r\n */\n\nfunction create(tag, attrs) {\n  var elm = document.createElement(tag);\n  each(attrs, function (value, key) {\n    return setAttribute(elm, key, value);\n  });\n  return elm;\n}\n/**\r\n * Convert HTML string to DOM node.\r\n *\r\n * @param {string} html - HTML string.\r\n *\r\n * @return {Node} - A created node.\r\n */\n\nfunction domify(html) {\n  var div = create('div', {});\n  div.innerHTML = html;\n  return div.firstChild;\n}\n/**\r\n * Remove a given element from a DOM tree.\r\n *\r\n * @param {Element|Element[]} elms - Element(s) to be removed.\r\n */\n\nfunction dom_remove(elms) {\n  toArray(elms).forEach(function (elm) {\n    if (elm) {\n      var parent = elm.parentElement;\n      parent && parent.removeChild(elm);\n    }\n  });\n}\n/**\r\n * Append a child to a given element.\r\n *\r\n * @param {Element} parent - A parent element.\r\n * @param {Element} child  - An element to be appended.\r\n */\n\nfunction append(parent, child) {\n  if (parent) {\n    parent.appendChild(child);\n  }\n}\n/**\r\n * Insert an element before the reference element.\r\n *\r\n * @param {Element|Node} ref - A reference element.\r\n * @param {Element}      elm - An element to be inserted.\r\n */\n\nfunction before(elm, ref) {\n  if (elm && ref) {\n    var parent = ref.parentElement;\n    parent && parent.insertBefore(elm, ref);\n  }\n}\n/**\r\n * Apply styles to the given element.\r\n *\r\n * @param {Element} elm     - An element where styles are applied.\r\n * @param {Object}  styles  - Object containing styles.\r\n */\n\nfunction applyStyle(elm, styles) {\n  if (elm) {\n    each(styles, function (value, prop) {\n      if (value !== null) {\n        elm.style[prop] = value;\n      }\n    });\n  }\n}\n/**\r\n * Add or remove classes to/from the element.\r\n * This function is for internal usage.\r\n *\r\n * @param {Element}         elm     - An element where classes are added.\r\n * @param {string|string[]} classes - Class names being added.\r\n * @param {boolean}         remove  - Whether to remove or add classes.\r\n */\n\nfunction addOrRemoveClasses(elm, classes, remove) {\n  if (elm) {\n    toArray(classes).forEach(function (name) {\n      if (name) {\n        elm.classList[remove ? 'remove' : 'add'](name);\n      }\n    });\n  }\n}\n/**\r\n * Add classes to the element.\r\n *\r\n * @param {Element}          elm     - An element where classes are added.\r\n * @param {string|string[]}  classes - Class names being added.\r\n */\n\n\nfunction addClass(elm, classes) {\n  addOrRemoveClasses(elm, classes, false);\n}\n/**\r\n * Remove a class from the element.\r\n *\r\n * @param {Element}         elm     - An element where classes are removed.\r\n * @param {string|string[]} classes - A class name being removed.\r\n */\n\nfunction removeClass(elm, classes) {\n  addOrRemoveClasses(elm, classes, true);\n}\n/**\r\n * Verify if the provided element has the class or not.\r\n *\r\n * @param {Element} elm       - An element.\r\n * @param {string}  className - A class name.\r\n *\r\n * @return {boolean} - True if the element has the class or false if not.\r\n */\n\nfunction hasClass(elm, className) {\n  return !!elm && elm.classList.contains(className);\n}\n/**\r\n * Set attribute to the given element.\r\n *\r\n * @param {Element}                 elm   - An element where an attribute is assigned.\r\n * @param {string}                  name  - Attribute name.\r\n * @param {string|number|boolean}   value - Attribute value.\r\n */\n\nfunction setAttribute(elm, name, value) {\n  if (elm) {\n    elm.setAttribute(name, value);\n  }\n}\n/**\r\n * Get attribute from the given element.\r\n *\r\n * @param {Element} elm  - An element where an attribute is assigned.\r\n * @param {string}  name - Attribute name.\r\n *\r\n * @return {string} - The value of the given attribute if available. An empty string if not.\r\n */\n\nfunction getAttribute(elm, name) {\n  return elm ? elm.getAttribute(name) : '';\n}\n/**\r\n * Remove attribute from the given element.\r\n *\r\n * @param {Element|Element[]} elms  - An element where an attribute is removed.\r\n * @param {string|string[]}      names - Attribute name.\r\n */\n\nfunction removeAttribute(elms, names) {\n  toArray(names).forEach(function (name) {\n    toArray(elms).forEach(function (elm) {\n      return elm && elm.removeAttribute(name);\n    });\n  });\n}\n/**\r\n * Return the Rect object of the provided object.\r\n *\r\n * @param {Element} elm - An element.\r\n *\r\n * @return {ClientRect|DOMRect} - A rect object.\r\n */\n\nfunction getRect(elm) {\n  return elm.getBoundingClientRect();\n}\n/**\r\n * Trigger the given callback after all images contained by the element are loaded.\r\n *\r\n * @param {Element}  elm      - Element that may contain images.\r\n * @param {Function} callback - Callback function fired right after all images are loaded.\r\n */\n\nfunction loaded(elm, callback) {\n  var images = elm.querySelectorAll('img');\n  var length = images.length;\n\n  if (length) {\n    var count = 0;\n    each(images, function (img) {\n      img.onload = img.onerror = function () {\n        if (++count === length) {\n          callback();\n        }\n      };\n    });\n  } else {\n    // Trigger the callback immediately if there is no image.\n    callback();\n  }\n}\n;// CONCATENATED MODULE: ./src/js/constants/types.js\n/**\r\n * Export slider types.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Normal slider.\r\n *\r\n * @type {string}\r\n */\nvar SLIDE = 'slide';\n/**\r\n * Loop after the last slide and before the first one.\r\n *\r\n * @type {string}\r\n */\n\nvar LOOP = 'loop';\n/**\r\n * The track doesn't move.\r\n *\r\n * @type {string}\r\n */\n\nvar FADE = 'fade';\n;// CONCATENATED MODULE: ./src/js/transitions/slide/index.js\n/**\r\n * The component for general slide effect transition.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The component for general slide effect transition.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const slide = (function (Splide, Components) {\n  /**\r\n   * Hold the list element.\r\n   *\r\n   * @type {Element}\r\n   */\n  var list;\n  /**\r\n   * Hold the onEnd callback function.\r\n   *\r\n   * @type {function}\r\n   */\n\n  var endCallback;\n  return {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      list = Components.Elements.list;\n      Splide.on('transitionend', function (e) {\n        if (e.target === list && endCallback) {\n          endCallback();\n        }\n      }, list);\n    },\n\n    /**\r\n     * Start transition.\r\n     *\r\n     * @param {number}   destIndex - Destination slide index that might be clone's.\r\n     * @param {number}   newIndex  - New index.\r\n     * @param {number}   prevIndex - Previous index.\r\n     * @param {Object}   coord     - Destination coordinates.\r\n     * @param {function} done      - Callback function must be invoked when transition is completed.\r\n     */\n    start: function start(destIndex, newIndex, prevIndex, coord, done) {\n      var options = Splide.options;\n      var edgeIndex = Components.Controller.edgeIndex;\n      var speed = options.speed;\n      endCallback = done;\n\n      if (Splide.is(SLIDE)) {\n        if (prevIndex === 0 && newIndex >= edgeIndex || prevIndex >= edgeIndex && newIndex === 0) {\n          speed = options.rewindSpeed || speed;\n        }\n      }\n\n      applyStyle(list, {\n        transition: \"transform \" + speed + \"ms \" + options.easing,\n        transform: \"translate(\" + coord.x + \"px,\" + coord.y + \"px)\"\n      });\n    }\n  };\n});\n;// CONCATENATED MODULE: ./src/js/transitions/fade/index.js\n/**\r\n * The component for fade transition.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The component for fade transition.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const fade = (function (Splide, Components) {\n  var Fade = {\n    /**\r\n     * Called when the component is mounted.\r\n     * Apply transition style to the first slide.\r\n     */\n    mount: function mount() {\n      apply(Splide.index);\n    },\n\n    /**\r\n     * Start transition.\r\n     *\r\n     * @param {number}    destIndex - Destination slide index that might be clone's.\r\n     * @param {number}    newIndex  - New index.\r\n     * @param {number}    prevIndex - Previous index.\r\n     * @param {Object}    coord     - Destination coordinates.\r\n     * @param {function}  done      - Callback function must be invoked when transition is completed.\r\n     */\n    start: function start(destIndex, newIndex, prevIndex, coord, done) {\n      var track = Components.Elements.track;\n      applyStyle(track, {\n        height: unit(track.clientHeight)\n      });\n      apply(newIndex);\n      setTimeout(function () {\n        done();\n        applyStyle(track, {\n          height: ''\n        });\n      });\n    }\n  };\n  /**\r\n   * Apply transition style to the slide specified by the given index.\r\n   *\r\n   * @param {number} index - A slide index.\r\n   */\n\n  function apply(index) {\n    var options = Splide.options;\n    applyStyle(Components.Elements.slides[index], {\n      transition: \"opacity \" + options.speed + \"ms \" + options.easing\n    });\n  }\n\n  return Fade;\n});\n;// CONCATENATED MODULE: ./src/js/transitions/index.js\n/**\r\n * Export transition components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n;// CONCATENATED MODULE: ./src/js/core/composer.js\n/**\r\n * Provide a function for composing components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * Compose components.\r\n *\r\n * @param {Splide}   Splide     - Splide instance.\r\n * @param {Object}   Components - Additional components.\r\n * @param {function} Transition - Change component for transition.\r\n *\r\n * @return {Object} - An object containing all components.\r\n */\n\nfunction compose(Splide, Components, Transition) {\n  var components = {};\n  each(Components, function (Component, name) {\n    components[name] = Component(Splide, components, name.toLowerCase());\n  });\n\n  if (!Transition) {\n    Transition = Splide.is(FADE) ? fade : slide;\n  }\n\n  components.Transition = Transition(Splide, components);\n  return components;\n}\n;// CONCATENATED MODULE: ./src/js/utils/error.js\n/**\r\n * Utility functions for outputting logs.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Prefix of an error massage.\r\n *\r\n * @type {string}\r\n */\nvar MESSAGE_PREFIX = '[SPLIDE]';\n/**\r\n * Display an error message on the browser console.\r\n *\r\n * @param {string} message - An error message.\r\n */\n\nfunction error(message) {\n  console.error(MESSAGE_PREFIX + \" \" + message);\n}\n/**\r\n * Check existence of the given object and throw an error if it doesn't.\r\n *\r\n * @throws {Error}\r\n *\r\n * @param {*}      subject - A subject to be confirmed.\r\n * @param {string} message - An error message.\r\n */\n\nfunction exist(subject, message) {\n  if (!subject) {\n    throw new Error(message);\n  }\n}\n;// CONCATENATED MODULE: ./src/js/constants/classes.js\n/**\r\n * Export class names.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * A root class name.\r\n *\r\n * @type {string}\r\n */\nvar ROOT = 'splide';\n/**\r\n * The definition table of all classes for elements.\r\n * They might be modified by options.\r\n *\r\n * @type {Object}\r\n */\n\nvar ELEMENT_CLASSES = {\n  root: ROOT,\n  slider: ROOT + \"__slider\",\n  track: ROOT + \"__track\",\n  list: ROOT + \"__list\",\n  slide: ROOT + \"__slide\",\n  container: ROOT + \"__slide__container\",\n  arrows: ROOT + \"__arrows\",\n  arrow: ROOT + \"__arrow\",\n  prev: ROOT + \"__arrow--prev\",\n  next: ROOT + \"__arrow--next\",\n  pagination: ROOT + \"__pagination\",\n  page: ROOT + \"__pagination__page\",\n  clone: ROOT + \"__slide--clone\",\n  progress: ROOT + \"__progress\",\n  bar: ROOT + \"__progress__bar\",\n  autoplay: ROOT + \"__autoplay\",\n  play: ROOT + \"__play\",\n  pause: ROOT + \"__pause\",\n  spinner: ROOT + \"__spinner\",\n  sr: ROOT + \"__sr\"\n};\n/**\r\n * Definitions of status classes.\r\n *\r\n * @type {Object}\r\n */\n\nvar STATUS_CLASSES = {\n  active: 'is-active',\n  visible: 'is-visible',\n  loading: 'is-loading'\n};\n;// CONCATENATED MODULE: ./src/js/constants/i18n.js\n/**\r\n * Export i18n texts as object.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Texts for i18n.\r\n *\r\n * @type {Object}\r\n */\nvar I18N = {\n  prev: 'Previous slide',\n  next: 'Next slide',\n  first: 'Go to first slide',\n  last: 'Go to last slide',\n  slideX: 'Go to slide %s',\n  pageX: 'Go to page %s',\n  play: 'Start autoplay',\n  pause: 'Pause autoplay'\n};\n;// CONCATENATED MODULE: ./src/js/constants/defaults.js\n/**\r\n * Export default options.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\nvar DEFAULTS = {\n  /**\r\n   * Determine a slider type.\r\n   * - 'slide': Regular slider.\r\n   * - 'loop' : Carousel slider.\r\n   * - 'fade' : Change slides with fade transition. perPage, drag options are ignored.\r\n   *\r\n   * @type {string}\r\n   */\n  type: 'slide',\n\n  /**\r\n   * Whether to rewind a slider before the first slide or after the last one.\r\n   * In \"loop\" mode, this option is ignored.\r\n   *\r\n   * @type {boolean}\r\n   */\n  rewind: false,\n\n  /**\r\n   * Transition speed in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\n  speed: 400,\n\n  /**\r\n   * Transition speed on rewind in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\n  rewindSpeed: 0,\n\n  /**\r\n   * Whether to prevent any actions while a slider is transitioning.\r\n   * If false, navigation, drag and swipe work while the slider is running.\r\n   * Even so, it will be forced to wait for transition in some cases in the loop mode to shift a slider.\r\n   *\r\n   * @type {boolean}\r\n   */\n  waitForTransition: true,\n\n  /**\r\n   * Define slider max width.\r\n   *\r\n   * @type {number}\r\n   */\n  width: 0,\n\n  /**\r\n   * Define slider height.\r\n   *\r\n   * @type {number}\r\n   */\n  height: 0,\n\n  /**\r\n   * Fix width of slides. CSS format is allowed such as 10em, 80% or 80vw.\r\n   * perPage number will be ignored when this option is falsy.\r\n   *\r\n   * @type {number|string}\r\n   */\n  fixedWidth: 0,\n\n  /**\r\n   * Fix height of slides. CSS format is allowed such as 10em, 80vh but % unit is not accepted.\r\n   * heightRatio option will be ignored when this option is falsy.\r\n   *\r\n   * @type {number|string}\r\n   */\n  fixedHeight: 0,\n\n  /**\r\n   * Determine height of slides by ratio to a slider width.\r\n   * This will be ignored when the fixedHeight is provided.\r\n   *\r\n   * @type {number}\r\n   */\n  heightRatio: 0,\n\n  /**\r\n   * If true, slide width will be determined by the element width itself.\r\n   * - perPage/perMove should be 1.\r\n   *\r\n   * @type {boolean}\r\n   */\n  autoWidth: false,\n\n  /**\r\n   * If true, slide height will be determined by the element width itself.\r\n   * - perPage/perMove should be 1.\r\n   *\r\n   * @type {boolean}\r\n   */\n  autoHeight: false,\n\n  /**\r\n   * Determine how many slides should be displayed per page.\r\n   *\r\n   * @type {number}\r\n   */\n  perPage: 1,\n\n  /**\r\n   * Determine how many slides should be moved when a slider goes to next or perv.\r\n   *\r\n   * @type {number}\r\n   */\n  perMove: 0,\n\n  /**\r\n   * Determine manually how many clones should be generated on the left and right side.\r\n   * The total number of clones will be twice of this number.\r\n   *\r\n   * @type {number}\r\n   */\n  clones: 0,\n\n  /**\r\n   * Start index.\r\n   *\r\n   * @type {number}\r\n   */\n  start: 0,\n\n  /**\r\n   * Determine which slide should be focused if there are multiple slides in a page.\r\n   * A string \"center\" is acceptable for centering slides.\r\n   *\r\n   * @type {boolean|number|string}\r\n   */\n  focus: false,\n\n  /**\r\n   * Gap between slides. CSS format is allowed such as 1em.\r\n   *\r\n   * @type {number|string}\r\n   */\n  gap: 0,\n\n  /**\r\n   * Set padding-left/right in horizontal mode or padding-top/bottom in vertical one.\r\n   * Give a single value to set a same size for both sides or\r\n   * do an object for different sizes.\r\n   * Also, CSS format is allowed such as 1em.\r\n   *\r\n   * @example\r\n   * - 10: Number\r\n   * - '1em': CSS format.\r\n   * - { left: 0, right: 20 }: Object for different sizes in horizontal mode.\r\n   * - { top: 0, bottom: 20 }: Object for different sizes in vertical mode.\r\n   *\r\n   * @type {number|string|Object}\r\n   */\n  padding: 0,\n\n  /**\r\n   * Whether to append arrows.\r\n   *\r\n   * @type {boolean}\r\n   */\n  arrows: true,\n\n  /**\r\n   * Change the arrow SVG path like 'm7.61 0.807-2.12...'.\r\n   *\r\n   * @type {string}\r\n   */\n  arrowPath: '',\n\n  /**\r\n   * Whether to append pagination(indicator dots) or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  pagination: true,\n\n  /**\r\n   * Activate autoplay.\r\n   *\r\n   * @type {boolean}\r\n   */\n  autoplay: false,\n\n  /**\r\n   * Autoplay interval in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\n  interval: 5000,\n\n  /**\r\n   * Whether to stop autoplay when a slider is hovered.\r\n   *\r\n   * @type {boolean}\r\n   */\n  pauseOnHover: true,\n\n  /**\r\n   * Whether to stop autoplay when a slider elements are focused.\r\n   * True is recommended for accessibility.\r\n   *\r\n   * @type {boolean}\r\n   */\n  pauseOnFocus: true,\n\n  /**\r\n   * Whether to reset progress of the autoplay timer when resumed.\r\n   *\r\n   * @type {boolean}\r\n   */\n  resetProgress: true,\n\n  /**\r\n   * Loading images lazily.\r\n   * Image src must be provided by a data-splide-lazy attribute.\r\n   *\r\n   * - false: Do nothing.\r\n   * - 'nearby': Only images around an active slide will be loaded.\r\n   * - 'sequential': All images will be sequentially loaded.\r\n   *\r\n   * @type {boolean|string}\r\n   */\n  lazyLoad: false,\n\n  /**\r\n   * This option works only when a lazyLoad option is \"nearby\".\r\n   * Determine how many pages(not slides) around an active slide should be loaded beforehand.\r\n   *\r\n   * @type {number}\r\n   */\n  preloadPages: 1,\n\n  /**\r\n   * Easing for CSS transition. For example, linear, ease or cubic-bezier().\r\n   *\r\n   * @type {string}\r\n   */\n  easing: 'cubic-bezier(.42,.65,.27,.99)',\n\n  /**\r\n   * Whether to enable keyboard shortcuts\r\n   * - true or 'global': Listen to keydown event of the document.\r\n   * - 'focused': Listen to the keydown event of the slider root element. tabindex=\"0\" will be added to the element.\r\n   * - false: Disable keyboard shortcuts.\r\n   *\r\n   * @type {boolean|string}\r\n   */\n  keyboard: 'global',\n\n  /**\r\n   * Whether to allow mouse drag and touch swipe.\r\n   *\r\n   * @type {boolean}\r\n   */\n  drag: true,\n\n  /**\r\n   * The angle threshold for drag.\r\n   * The slider starts moving only when the drag angle is less than this threshold.\r\n   *\r\n   * @type {number}\r\n   */\n  dragAngleThreshold: 30,\n\n  /**\r\n   * Distance threshold for determining if the action is \"flick\" or \"swipe\".\r\n   * When a drag distance is over this value, the action will be treated as \"swipe\", not \"flick\".\r\n   *\r\n   * @type {number}\r\n   */\n  swipeDistanceThreshold: 150,\n\n  /**\r\n   * Velocity threshold for determining if the action is \"flick\" or \"swipe\".\r\n   * Around 0.5 is recommended.\r\n   *\r\n   * @type {number}\r\n   */\n  flickVelocityThreshold: .6,\n\n  /**\r\n   * Determine power of flick. The larger number this is, the farther a slider runs by flick.\r\n   * Around 500 is recommended.\r\n   *\r\n   * @type {number}\r\n   */\n  flickPower: 600,\n\n  /**\r\n   * Limit a number of pages to move by flick.\r\n   *\r\n   * @type {number}\r\n   */\n  flickMaxPages: 1,\n\n  /**\r\n   * Slider direction.\r\n   * - 'ltr': Left to right.\r\n   * - 'rtl': Right to left.\r\n   * - 'ttb': Top to bottom.\r\n   *\r\n   * @type {string}\r\n   */\n  direction: 'ltr',\n\n  /**\r\n   * Set img src to background-image of its parent element.\r\n   * Images with various sizes can be displayed as same dimension without cropping work.\r\n   * fixedHeight or heightRatio is required.\r\n   *\r\n   * @type {boolean}\r\n   */\n  cover: false,\n\n  /**\r\n   * Whether to enable accessibility(aria and screen reader texts) or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  accessibility: true,\n\n  /**\r\n   * Whether to add tabindex=\"0\" to visible slides or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  slideFocus: true,\n\n  /**\r\n   * Determine if a slider is navigation for another.\r\n   * Use \"sync\" API to synchronize two sliders.\r\n   *\r\n   * @type {boolean}\r\n   */\n  isNavigation: false,\n\n  /**\r\n   * Whether to trim spaces before the fist slide or after the last one when \"focus\" is not 0.\r\n   *\r\n   * @type {boolean}\r\n   */\n  trimSpace: true,\n\n  /**\r\n   * The \"is-active\" class is added after transition as default.\r\n   * If true, it will be added before move.\r\n   *\r\n   * @type {boolean}\r\n   */\n  updateOnMove: false,\n\n  /**\r\n   * Throttle duration in milliseconds for the resize event.\r\n   *\r\n   * @type {number}\r\n   */\n  throttle: 100,\n\n  /**\r\n   * Whether to destroy a slider or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  destroy: false,\n\n  /**\r\n   * Options for specific breakpoints.\r\n   *\r\n   * @example\r\n   * {\r\n   *   1000: {\r\n   *     perPage: 3,\r\n   *     gap: 20\r\n   *   },\r\n   *   600: {\r\n   *     perPage: 1,\r\n   *     gap: 5,\r\n   *   }\r\n   * }\r\n   *\r\n   * @type {boolean|Object}\r\n   */\n  breakpoints: false,\n\n  /**\r\n   * Collection of class names.\r\n   *\r\n   * @see ./classes.js\r\n   *\r\n   * @type {Object}\r\n   */\n  classes: ELEMENT_CLASSES,\n\n  /**\r\n   * Collection of i18n texts.\r\n   *\r\n   * @see ./i18n.js\r\n   *\r\n   * @type {Object}\r\n   */\n  i18n: I18N\n};\n;// CONCATENATED MODULE: ./src/js/constants/states.js\n/**\r\n * Export state constants.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Splide has been just created.\r\n *\r\n * @type {number}\r\n */\nvar CREATED = 1;\n/**\r\n * All components have been mounted and initialized.\r\n *\r\n * @type {number}\r\n */\n\nvar MOUNTED = 2;\n/**\r\n * Splide is ready for transition.\r\n *\r\n * @type {number}\r\n */\n\nvar IDLE = 3;\n/**\r\n * Splide is moving.\r\n *\r\n * @type {number}\r\n */\n\nvar MOVING = 4;\n/**\r\n * Splide is moving.\r\n *\r\n * @type {number}\r\n */\n\nvar DESTROYED = 5;\n;// CONCATENATED MODULE: ./src/js/splide.js\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * The main class for applying Splide to an element.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n\n\n/**\r\n * The main class for applying Splide to an element,\r\n * providing some APIs to control the behavior.\r\n */\n\nvar Splide = /*#__PURE__*/function () {\n  /**\r\n   * Splide constructor.\r\n   *\r\n   * @throws {Error} When the given root element or selector is invalid.\r\n   *\r\n   * @param {Element|string}  root       - A selector for a root element or an element itself.\r\n   * @param {Object}          options    - Optional. Options to change default behaviour.\r\n   * @param {Object}          Components - Optional. Components.\r\n   */\n  function Splide(root, options, Components) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (Components === void 0) {\n      Components = {};\n    }\n\n    this.root = root instanceof Element ? root : document.querySelector(root);\n    exist(this.root, 'An invalid element/selector was given.');\n    this.Components = null;\n    this.Event = core_event();\n    this.State = state(CREATED);\n    this.STATES = states_namespaceObject;\n    this._o = merge(DEFAULTS, options);\n    this._i = 0;\n    this._c = Components;\n    this._e = {}; // Extensions\n\n    this._t = null; // Transition\n  }\n  /**\r\n   * Compose and mount components.\r\n   *\r\n   * @param {Object}   Extensions - Optional. Additional components.\r\n   * @param {function} Transition - Optional. Set a custom transition component.\r\n   *\r\n   * @return {Splide|undefined} - This instance or undefined if an exception occurred.\r\n   */\n\n\n  var _proto = Splide.prototype;\n\n  _proto.mount = function mount(Extensions, Transition) {\n    var _this = this;\n\n    if (Extensions === void 0) {\n      Extensions = this._e;\n    }\n\n    if (Transition === void 0) {\n      Transition = this._t;\n    }\n\n    // Reset the state.\n    this.State.set(CREATED);\n    this._e = Extensions;\n    this._t = Transition;\n    this.Components = compose(this, merge(this._c, Extensions), Transition);\n\n    try {\n      each(this.Components, function (component, key) {\n        var required = component.required;\n\n        if (required === undefined || required) {\n          component.mount && component.mount();\n        } else {\n          delete _this.Components[key];\n        }\n      });\n    } catch (e) {\n      error(e.message);\n      return;\n    }\n\n    var State = this.State;\n    State.set(MOUNTED);\n    each(this.Components, function (component) {\n      component.mounted && component.mounted();\n    });\n    this.emit('mounted');\n    State.set(IDLE);\n    this.emit('ready');\n    applyStyle(this.root, {\n      visibility: 'visible'\n    });\n    this.on('move drag', function () {\n      return State.set(MOVING);\n    }).on('moved dragged', function () {\n      return State.set(IDLE);\n    });\n    return this;\n  }\n  /**\r\n   * Set sync target.\r\n   *\r\n   * @param {Splide} splide - A Splide instance.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\n  ;\n\n  _proto.sync = function sync(splide) {\n    this.sibling = splide;\n    return this;\n  }\n  /**\r\n   * Register callback fired on the given event(s).\r\n   *\r\n   * @param {string}   events  - An event name. Use space to separate multiple events.\r\n   *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\r\n   * @param {function} handler - A callback function.\r\n   * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\r\n   * @param {Object}   options - Optional. Options for addEventListener.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\n  ;\n\n  _proto.on = function on(events, handler, elm, options) {\n    if (elm === void 0) {\n      elm = null;\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.Event.on(events, handler, elm, options);\n    return this;\n  }\n  /**\r\n   * Unsubscribe the given event.\r\n   *\r\n   * @param {string}  events - A event name.\r\n   * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\n  ;\n\n  _proto.off = function off(events, elm) {\n    if (elm === void 0) {\n      elm = null;\n    }\n\n    this.Event.off(events, elm);\n    return this;\n  }\n  /**\r\n   * Emit an event.\r\n   *\r\n   * @param {string} event - An event name.\r\n   * @param {*}      args  - Any number of arguments passed to handlers.\r\n   */\n  ;\n\n  _proto.emit = function emit(event) {\n    var _this$Event;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    (_this$Event = this.Event).emit.apply(_this$Event, [event].concat(args));\n\n    return this;\n  }\n  /**\r\n   * Go to the slide specified by the given control.\r\n   *\r\n   * @param {string|number} control - A control pattern.\r\n   * @param {boolean}       wait    - Optional. Whether to wait for transition.\r\n   */\n  ;\n\n  _proto.go = function go(control, wait) {\n    if (wait === void 0) {\n      wait = this.options.waitForTransition;\n    }\n\n    if (this.State.is(IDLE) || this.State.is(MOVING) && !wait) {\n      this.Components.Controller.go(control, false);\n    }\n\n    return this;\n  }\n  /**\r\n   * Verify whether the slider type is the given one or not.\r\n   *\r\n   * @param {string} type - A slider type.\r\n   *\r\n   * @return {boolean} - True if the slider type is the provided type or false if not.\r\n   */\n  ;\n\n  _proto.is = function is(type) {\n    return type === this._o.type;\n  }\n  /**\r\n   * Insert a slide.\r\n   *\r\n   * @param {Element|string} slide - A slide element to be added.\r\n   * @param {number}         index - A slide will be added at the position.\r\n   */\n  ;\n\n  _proto.add = function add(slide, index) {\n    if (index === void 0) {\n      index = -1;\n    }\n\n    this.Components.Elements.add(slide, index, this.refresh.bind(this));\n    return this;\n  }\n  /**\r\n   * Remove the slide designated by the index.\r\n   *\r\n   * @param {number} index - A slide index.\r\n   */\n  ;\n\n  _proto.remove = function remove(index) {\n    this.Components.Elements.remove(index);\n    this.refresh();\n    return this;\n  }\n  /**\r\n   * Destroy all Slide objects and clones and recreate them again.\r\n   */\n  ;\n\n  _proto.refresh = function refresh() {\n    this.emit('refresh:before').emit('refresh').emit('resize');\n    return this;\n  }\n  /**\r\n   * Destroy the Splide.\r\n   * \"Completely\" boolean is mainly for breakpoints.\r\n   *\r\n   * @param {boolean} completely - Destroy completely.\r\n   */\n  ;\n\n  _proto.destroy = function destroy(completely) {\n    var _this2 = this;\n\n    if (completely === void 0) {\n      completely = true;\n    }\n\n    // Postpone destroy because it should be done after mount.\n    if (this.State.is(CREATED)) {\n      this.on('ready', function () {\n        return _this2.destroy(completely);\n      });\n      return;\n    }\n\n    values(this.Components).reverse().forEach(function (component) {\n      component.destroy && component.destroy(completely);\n    });\n    this.emit('destroy', completely); // Destroy all event handlers, including ones for native events.\n\n    this.Event.destroy();\n    this.State.set(DESTROYED);\n    return this;\n  }\n  /**\r\n   * Return the current slide index.\r\n   *\r\n   * @return {number} - The current slide index.\r\n   // */\n  ;\n\n  _createClass(Splide, [{\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Set the current slide index.\r\n     *\r\n     * @param {number|string} index - A new index.\r\n     */\n    ,\n    set: function set(index) {\n      this._i = parseInt(index);\n    }\n    /**\r\n     * Return length of slides.\r\n     * This is an alias of Elements.length.\r\n     *\r\n     * @return {number} - A number of slides.\r\n     */\n\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.Components.Elements.length;\n    }\n    /**\r\n     * Return options.\r\n     *\r\n     * @return {Object} - Options object.\r\n     */\n\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Set options with merging the given object to the current one.\r\n     *\r\n     * @param {Object} options - New options.\r\n     */\n    ,\n    set: function set(options) {\n      var created = this.State.is(CREATED);\n\n      if (!created) {\n        this.emit('update');\n      }\n\n      this._o = merge(this._o, options);\n\n      if (!created) {\n        this.emit('updated', this._o);\n      }\n    }\n    /**\r\n     * Return the class list.\r\n     * This is an alias of Splide.options.classList.\r\n     *\r\n     * @return {Object} - An object containing all class list.\r\n     */\n\n  }, {\n    key: \"classes\",\n    get: function get() {\n      return this._o.classes;\n    }\n    /**\r\n     * Return the i18n strings.\r\n     * This is an alias of Splide.options.i18n.\r\n     *\r\n     * @return {Object} - An object containing all i18n strings.\r\n     */\n\n  }, {\n    key: \"i18n\",\n    get: function get() {\n      return this._o.i18n;\n    }\n  }]);\n\n  return Splide;\n}();\n\n\n;// CONCATENATED MODULE: ./src/js/components/options/index.js\n/**\r\n * The component for initializing options.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The component for initializing options.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const options = (function (Splide) {\n  /**\r\n   * Retrieve options from the data attribute.\r\n   * Note that IE10 doesn't support dataset property.\r\n   *\r\n   * @type {string}\r\n   */\n  var options = getAttribute(Splide.root, 'data-splide');\n\n  if (options) {\n    try {\n      Splide.options = JSON.parse(options);\n    } catch (e) {\n      error(e.message);\n    }\n  }\n\n  return {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      if (Splide.State.is(CREATED)) {\n        Splide.index = Splide.options.start;\n      }\n    }\n  };\n});\n;// CONCATENATED MODULE: ./src/js/constants/directions.js\n/**\r\n * Export layout modes.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Enumerate slides from left to right.\r\n *\r\n * @type {string}\r\n */\nvar LTR = 'ltr';\n/**\r\n * Enumerate slides from right to left.\r\n *\r\n * @type {string}\r\n */\n\nvar RTL = 'rtl';\n/**\r\n * Enumerate slides in a col.\r\n *\r\n * @type {string}\r\n */\n\nvar TTB = 'ttb';\n;// CONCATENATED MODULE: ./src/js/components/elements/slide.js\n/**\r\n * The sub component for handling each slide.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n/**\r\n * Events for restoring original styles.\r\n *\r\n * @type {string}\r\n */\n\nvar STYLE_RESTORE_EVENTS = 'update.slide';\n/**\r\n * The sub component for handling each slide.\r\n *\r\n * @param {Splide}  Splide    - A Splide instance.\r\n * @param {number}  index     - An unique slide index.\r\n * @param {number}  realIndex - Clones should pass a real slide index.\r\n * @param {Element} slide     - A slide element.\r\n *\r\n * @return {Object} - The sub component object.\r\n */\n\n/* harmony default export */ const elements_slide = (function (Splide, index, realIndex, slide) {\n  /**\r\n   * Whether to update \"is-active\" class before or after transition.\r\n   *\r\n   * @type {boolean}\r\n   */\n  var updateOnMove = Splide.options.updateOnMove;\n  /**\r\n   * Events when the slide status is updated.\r\n   * Append a namespace to remove listeners later.\r\n   *\r\n   * @type {string}\r\n   */\n\n  var STATUS_UPDATE_EVENTS = 'ready.slide updated.slide resized.slide moved.slide' + (updateOnMove ? ' move.slide' : '');\n  /**\r\n   * Slide sub component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Slide = {\n    /**\r\n     * Slide element.\r\n     *\r\n     * @type {Element}\r\n     */\n    slide: slide,\n\n    /**\r\n     * Slide index.\r\n     *\r\n     * @type {number}\r\n     */\n    index: index,\n\n    /**\r\n     * Real index for clones.\r\n     *\r\n     * @type {number}\r\n     */\n    realIndex: realIndex,\n\n    /**\r\n     * Container element if available.\r\n     *\r\n     * @type {Element|undefined}\r\n     */\n    container: child(slide, Splide.classes.container),\n\n    /**\r\n     * Whether this is a cloned slide or not.\r\n     *\r\n     * @type {boolean}\r\n     */\n    isClone: realIndex > -1,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      if (!this.isClone) {\n        slide.id = Splide.root.id + \"-slide\" + pad(index + 1);\n      }\n\n      Splide.on(STATUS_UPDATE_EVENTS, function () {\n        return _this.update();\n      }).on(STYLE_RESTORE_EVENTS, restoreStyles).on('click', function () {\n        return Splide.emit('click', _this);\n      }, slide);\n      /*\r\n       * Add \"is-active\" class to a clone element temporarily\r\n       * and it will be removed on \"moved\" event.\r\n       */\n\n      if (updateOnMove) {\n        Splide.on('move.slide', function (newIndex) {\n          if (newIndex === realIndex) {\n            _update(true, false);\n          }\n        });\n      } // Make sure the slide is shown.\n\n\n      applyStyle(slide, {\n        display: ''\n      }); // Hold the original styles.\n\n      this.styles = getAttribute(slide, 'style') || '';\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      Splide.off(STATUS_UPDATE_EVENTS).off(STYLE_RESTORE_EVENTS).off('click', slide);\n      removeClass(slide, values(STATUS_CLASSES));\n      restoreStyles();\n      removeAttribute(this.container, 'style');\n    },\n\n    /**\r\n     * Update active and visible status.\r\n     */\n    update: function update() {\n      _update(this.isActive(), false);\n\n      _update(this.isVisible(), true);\n    },\n\n    /**\r\n     * Check whether this slide is active or not.\r\n     *\r\n     * @return {boolean} - True if the slide is active or false if not.\r\n     */\n    isActive: function isActive() {\n      return Splide.index === index;\n    },\n\n    /**\r\n     * Check whether this slide is visible in the viewport or not.\r\n     *\r\n     * @return {boolean} - True if the slide is visible or false if not.\r\n     */\n    isVisible: function isVisible() {\n      var active = this.isActive();\n\n      if (Splide.is(FADE) || active) {\n        return active;\n      }\n\n      var ceil = Math.ceil;\n      var trackRect = getRect(Splide.Components.Elements.track);\n      var slideRect = getRect(slide);\n\n      if (Splide.options.direction === TTB) {\n        return trackRect.top <= slideRect.top && slideRect.bottom <= ceil(trackRect.bottom);\n      }\n\n      return trackRect.left <= slideRect.left && slideRect.right <= ceil(trackRect.right);\n    },\n\n    /**\r\n     * Calculate how far this slide is from another slide and\r\n     * return true if the distance is within the given number.\r\n     *\r\n     * @param {number} from   - Index of a target slide.\r\n     * @param {number} within - True if the slide is within this number.\r\n     *\r\n     * @return {boolean} - True if the slide is within the number or false otherwise.\r\n     */\n    isWithin: function isWithin(from, within) {\n      var diff = Math.abs(from - index);\n\n      if (!Splide.is(SLIDE) && !this.isClone) {\n        diff = Math.min(diff, Splide.length - diff);\n      }\n\n      return diff < within;\n    }\n  };\n  /**\r\n   * Update classes for activity or visibility.\r\n   *\r\n   * @param {boolean} active        - Is active/visible or not.\r\n   * @param {boolean} forVisibility - Toggle classes for activity or visibility.\r\n   */\n\n  function _update(active, forVisibility) {\n    var type = forVisibility ? 'visible' : 'active';\n    var className = STATUS_CLASSES[type];\n\n    if (active) {\n      addClass(slide, className);\n      Splide.emit(\"\" + type, Slide);\n    } else {\n      if (hasClass(slide, className)) {\n        removeClass(slide, className);\n        Splide.emit(\"\" + (forVisibility ? 'hidden' : 'inactive'), Slide);\n      }\n    }\n  }\n  /**\r\n   * Restore the original styles.\r\n   */\n\n\n  function restoreStyles() {\n    setAttribute(slide, 'style', Slide.styles);\n  }\n\n  return Slide;\n});\n;// CONCATENATED MODULE: ./src/js/components/elements/index.js\n/**\r\n * The component for main elements.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n/**\r\n * The property name for UID stored in a window object.\r\n *\r\n * @type {string}\r\n */\n\nvar UID_NAME = 'uid';\n/**\r\n * The component for main elements.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const components_elements = (function (Splide, Components) {\n  /**\r\n   * Hold the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n  var root = Splide.root;\n  /**\r\n   * Hold the class list.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var classes = Splide.classes;\n  /**\r\n   * Store Slide objects.\r\n   *\r\n   * @type {Array}\r\n   */\n\n  var Slides = [];\n  /*\r\n   * Assign unique ID to the root element if it doesn't have the one.\r\n   * Note that IE doesn't support padStart() to fill the uid by 0.\r\n   */\n\n  if (!root.id) {\n    window.splide = window.splide || {};\n    var uid = window.splide[UID_NAME] || 0;\n    window.splide[UID_NAME] = ++uid;\n    root.id = \"splide\" + pad(uid);\n  }\n  /**\r\n   * Elements component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n\n  var Elements = {\n    /**\r\n     * Called when the component is mounted.\r\n     * Collect main elements and store them as member properties.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      this.init();\n      Splide.on('refresh', function () {\n        _this.destroy();\n\n        _this.init();\n      }).on('updated', function () {\n        removeClass(root, getClasses());\n        addClass(root, getClasses());\n      });\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      Slides.forEach(function (Slide) {\n        Slide.destroy();\n      });\n      Slides = [];\n      removeClass(root, getClasses());\n    },\n\n    /**\r\n     * Initialization.\r\n     */\n    init: function init() {\n      var _this2 = this;\n\n      collect();\n      addClass(root, getClasses());\n      this.slides.forEach(function (slide, index) {\n        _this2.register(slide, index, -1);\n      });\n    },\n\n    /**\r\n     * Register a slide to create a Slide object and handle its behavior.\r\n     *\r\n     * @param {Element} slide     - A slide element.\r\n     * @param {number}  index     - A unique index. This can be negative.\r\n     * @param {number}  realIndex - A real index for clones. Set -1 for real slides.\r\n     */\n    register: function register(slide, index, realIndex) {\n      var SlideObject = elements_slide(Splide, index, realIndex, slide);\n      SlideObject.mount();\n      Slides.push(SlideObject);\n    },\n\n    /**\r\n     * Return the Slide object designated by the index.\r\n     * Note that \"find\" is not supported by IE.\r\n     *\r\n     * @return {Object|undefined} - A Slide object if available. Undefined if not.\r\n     */\n    getSlide: function getSlide(index) {\n      return Slides.filter(function (Slide) {\n        return Slide.index === index;\n      })[0];\n    },\n\n    /**\r\n     * Return all Slide objects.\r\n     *\r\n     * @param {boolean} includeClones - Whether to include cloned slides or not.\r\n     *\r\n     * @return {Object[]} - Slide objects.\r\n     */\n    getSlides: function getSlides(includeClones) {\n      return includeClones ? Slides : Slides.filter(function (Slide) {\n        return !Slide.isClone;\n      });\n    },\n\n    /**\r\n     * Return Slide objects belonging to the given page.\r\n     *\r\n     * @param {number} page - A page number.\r\n     *\r\n     * @return {Object[]} - An array containing Slide objects.\r\n     */\n    getSlidesByPage: function getSlidesByPage(page) {\n      var idx = Components.Controller.toIndex(page);\n      var options = Splide.options;\n      var max = options.focus !== false ? 1 : options.perPage;\n      return Slides.filter(function (_ref) {\n        var index = _ref.index;\n        return idx <= index && index < idx + max;\n      });\n    },\n\n    /**\r\n     * Insert a slide to a slider.\r\n     * Need to refresh Splide after adding a slide.\r\n     *\r\n     * @param {Node|string} slide    - A slide element to be added.\r\n     * @param {number}      index    - A slide will be added at the position.\r\n     * @param {Function}    callback - Called right after the slide is added to the DOM tree.\r\n     */\n    add: function add(slide, index, callback) {\n      if (typeof slide === 'string') {\n        slide = domify(slide);\n      }\n\n      if (slide instanceof Element) {\n        var ref = this.slides[index]; // This will be removed in mount() of a Slide component.\n\n        applyStyle(slide, {\n          display: 'none'\n        });\n\n        if (ref) {\n          before(slide, ref);\n          this.slides.splice(index, 0, slide);\n        } else {\n          append(this.list, slide);\n          this.slides.push(slide);\n        }\n\n        loaded(slide, function () {\n          callback && callback(slide);\n        });\n      }\n    },\n\n    /**\r\n     * Remove a slide from a slider.\r\n     * Need to refresh Splide after removing a slide.\r\n     *\r\n     * @param index - Slide index.\r\n     */\n    remove: function remove(index) {\n      dom_remove(this.slides.splice(index, 1)[0]);\n    },\n\n    /**\r\n     * Trigger the provided callback for each Slide object.\r\n     *\r\n     * @param {Function} callback - A callback function. The first argument will be the Slide object.\r\n     */\n    each: function each(callback) {\n      Slides.forEach(callback);\n    },\n\n    /**\r\n     * Return slides length without clones.\r\n     *\r\n     * @return {number} - Slide length.\r\n     */\n    get length() {\n      return this.slides.length;\n    },\n\n    /**\r\n     * Return \"SlideObjects\" length including clones.\r\n     *\r\n     * @return {number} - Slide length including clones.\r\n     */\n    get total() {\n      return Slides.length;\n    }\n\n  };\n  /**\r\n   * Collect elements.\r\n   */\n\n  function collect() {\n    Elements.slider = child(root, classes.slider);\n    Elements.track = find(root, \".\" + classes.track);\n    Elements.list = child(Elements.track, classes.list);\n    exist(Elements.track && Elements.list, 'Track or list was not found.');\n    Elements.slides = children(Elements.list, classes.slide);\n    var arrows = findParts(classes.arrows);\n    Elements.arrows = {\n      prev: find(arrows, \".\" + classes.prev),\n      next: find(arrows, \".\" + classes.next)\n    };\n    var autoplay = findParts(classes.autoplay);\n    Elements.bar = find(findParts(classes.progress), \".\" + classes.bar);\n    Elements.play = find(autoplay, \".\" + classes.play);\n    Elements.pause = find(autoplay, \".\" + classes.pause);\n    Elements.track.id = Elements.track.id || root.id + \"-track\";\n    Elements.list.id = Elements.list.id || root.id + \"-list\";\n  }\n  /**\r\n   * Return class names for the root element.\r\n   */\n\n\n  function getClasses() {\n    var rootClass = classes.root;\n    var options = Splide.options;\n    return [rootClass + \"--\" + options.type, rootClass + \"--\" + options.direction, options.drag ? rootClass + \"--draggable\" : '', options.isNavigation ? rootClass + \"--nav\" : '', STATUS_CLASSES.active];\n  }\n  /**\r\n   * Find parts only from children of the root or track.\r\n   *\r\n   * @return {Element} - A found element or undefined.\r\n   */\n\n\n  function findParts(className) {\n    return child(root, className) || child(Elements.slider, className);\n  }\n\n  return Elements;\n});\n;// CONCATENATED MODULE: ./src/js/components/controller/index.js\n/**\r\n * The component for controlling the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\nvar floor = Math.floor;\n/**\r\n * The component for controlling the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const controller = (function (Splide, Components) {\n  /**\r\n   * Store current options.\r\n   *\r\n   * @type {Object}\r\n   */\n  var options;\n  /**\r\n   * True if the slide is LOOP mode.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isLoop;\n  /**\r\n   * Controller component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Controller = {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      options = Splide.options;\n      isLoop = Splide.is(LOOP);\n      bind();\n    },\n\n    /**\r\n     * Make track run by the given control.\r\n     * - \"+{i}\" : Increment the slide index by i.\r\n     * - \"-{i}\" : Decrement the slide index by i.\r\n     * - \"{i}\"  : Go to the slide whose index is i.\r\n     * - \">\"    : Go to next page.\r\n     * - \"<\"    : Go to prev page.\r\n     * - \">{i}\" : Go to page i.\r\n     *\r\n     * @param {string|number} control  - A control pattern.\r\n     * @param {boolean}       silently - Go to the destination without event emission.\r\n     */\n    go: function go(control, silently) {\n      var destIndex = this.trim(this.parse(control));\n      Components.Track.go(destIndex, this.rewind(destIndex), silently);\n    },\n\n    /**\r\n     * Parse the given control and return the destination index for the track.\r\n     *\r\n     * @param {string} control - A control target pattern.\r\n     *\r\n     * @return {number} - A parsed target.\r\n     */\n    parse: function parse(control) {\n      var index = Splide.index;\n      var matches = String(control).match(/([+\\-<>]+)(\\d+)?/);\n      var indicator = matches ? matches[1] : '';\n      var number = matches ? parseInt(matches[2]) : 0;\n\n      switch (indicator) {\n        case '+':\n          index += number || 1;\n          break;\n\n        case '-':\n          index -= number || 1;\n          break;\n\n        case '>':\n        case '<':\n          index = parsePage(number, index, indicator === '<');\n          break;\n\n        default:\n          index = parseInt(control);\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Compute index from the given page number.\r\n     *\r\n     * @param {number} page - Page number.\r\n     *\r\n     * @return {number} - A computed page number.\r\n     */\n    toIndex: function toIndex(page) {\n      if (hasFocus()) {\n        return page;\n      }\n\n      var length = Splide.length;\n      var perPage = options.perPage;\n      var index = page * perPage;\n      index = index - (this.pageLength * perPage - length) * floor(index / length); // Adjustment for the last page.\n\n      if (length - perPage <= index && index < length) {\n        index = length - perPage;\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Compute page number from the given slide index.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - A computed page number.\r\n     */\n    toPage: function toPage(index) {\n      if (hasFocus()) {\n        return index;\n      }\n\n      var length = Splide.length;\n      var perPage = options.perPage; // Make the last \"perPage\" number of slides belong to the last page.\n\n      if (length - perPage <= index && index < length) {\n        return floor((length - 1) / perPage);\n      }\n\n      return floor(index / perPage);\n    },\n\n    /**\r\n     * Trim the given index according to the current mode.\r\n     * Index being returned could be less than 0 or greater than the length in Loop mode.\r\n     *\r\n     * @param {number} index - An index being trimmed.\r\n     *\r\n     * @return {number} - A trimmed index.\r\n     */\n    trim: function trim(index) {\n      if (!isLoop) {\n        index = options.rewind ? this.rewind(index) : between(index, 0, this.edgeIndex);\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Rewind the given index if it's out of range.\r\n     *\r\n     * @param {number} index - An index.\r\n     *\r\n     * @return {number} - A rewound index.\r\n     */\n    rewind: function rewind(index) {\n      var edge = this.edgeIndex;\n\n      if (isLoop) {\n        while (index > edge) {\n          index -= edge + 1;\n        }\n\n        while (index < 0) {\n          index += edge + 1;\n        }\n      } else {\n        if (index > edge) {\n          index = 0;\n        } else if (index < 0) {\n          index = edge;\n        }\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Check if the direction is \"rtl\" or not.\r\n     *\r\n     * @return {boolean} - True if \"rtl\" or false if not.\r\n     */\n    isRtl: function isRtl() {\n      return options.direction === RTL;\n    },\n\n    /**\r\n     * Return the page length.\r\n     *\r\n     * @return {number} - Max page number.\r\n     */\n    get pageLength() {\n      var length = Splide.length;\n      return hasFocus() ? length : Math.ceil(length / options.perPage);\n    },\n\n    /**\r\n     * Return the edge index.\r\n     *\r\n     * @return {number} - Edge index.\r\n     */\n    get edgeIndex() {\n      var length = Splide.length;\n\n      if (!length) {\n        return 0;\n      }\n\n      if (hasFocus() || options.isNavigation || isLoop) {\n        return length - 1;\n      }\n\n      return length - options.perPage;\n    },\n\n    /**\r\n     * Return the index of the previous slide.\r\n     *\r\n     * @return {number} - The index of the previous slide if available. -1 otherwise.\r\n     */\n    get prevIndex() {\n      var prev = Splide.index - 1;\n\n      if (isLoop || options.rewind) {\n        prev = this.rewind(prev);\n      }\n\n      return prev > -1 ? prev : -1;\n    },\n\n    /**\r\n     * Return the index of the next slide.\r\n     *\r\n     * @return {number} - The index of the next slide if available. -1 otherwise.\r\n     */\n    get nextIndex() {\n      var next = Splide.index + 1;\n\n      if (isLoop || options.rewind) {\n        next = this.rewind(next);\n      }\n\n      return Splide.index < next && next <= this.edgeIndex || next === 0 ? next : -1;\n    }\n\n  };\n  /**\r\n   * Listen to some events.\r\n   */\n\n  function bind() {\n    Splide.on('move', function (newIndex) {\n      Splide.index = newIndex;\n    }).on('updated refresh', function (newOptions) {\n      options = newOptions || options;\n      Splide.index = between(Splide.index, 0, Controller.edgeIndex);\n    });\n  }\n  /**\r\n   * Verify if the focus option is available or not.\r\n   *\r\n   * @return {boolean} - True if a slider has the focus option.\r\n   */\n\n\n  function hasFocus() {\n    return options.focus !== false;\n  }\n  /**\r\n   * Return the next or previous page index computed by the page number and current index.\r\n   *\r\n   * @param {number}  number - Specify the page number.\r\n   * @param {number}  index  - Current index.\r\n   * @param {boolean} prev   - Prev or next.\r\n   *\r\n   * @return {number} - Slide index.\r\n   */\n\n\n  function parsePage(number, index, prev) {\n    if (number > -1) {\n      return Controller.toIndex(number);\n    }\n\n    var perMove = options.perMove;\n    var sign = prev ? -1 : 1;\n\n    if (perMove) {\n      return index + perMove * sign;\n    }\n\n    return Controller.toIndex(Controller.toPage(index) + sign);\n  }\n\n  return Controller;\n});\n;// CONCATENATED MODULE: ./src/js/components/track/index.js\n/**\r\n * The component for moving list in the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\nvar abs = Math.abs;\n/**\r\n * The component for moving list in the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const track = (function (Splide, Components) {\n  /**\r\n   * Hold the Layout component.\r\n   *\r\n   * @type {Object}\r\n   */\n  var Layout;\n  /**\r\n   * Hold the Layout component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements;\n  /**\r\n   * Store the list element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var list;\n  /**\r\n   * Whether the current direction is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isVertical = Splide.options.direction === TTB;\n  /**\r\n   * Whether the slider type is FADE or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isFade = Splide.is(FADE);\n  /**\r\n   * Whether the slider direction is RTL or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isRTL = Splide.options.direction === RTL;\n  /**\r\n   * This will be true while transitioning from the last index to the first one.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isLoopPending = false;\n  /**\r\n   * Sign for the direction. Only RTL mode uses the positive sign.\r\n   *\r\n   * @type {number}\r\n   */\n\n  var sign = isRTL ? 1 : -1;\n  /**\r\n   * Track component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Track = {\n    /**\r\n     * Make public the sign defined locally.\r\n     *\r\n     * @type {number}\r\n     */\n    sign: sign,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Elements = Components.Elements;\n      Layout = Components.Layout;\n      list = Elements.list;\n    },\n\n    /**\r\n     * Called after the component is mounted.\r\n     * The resize event must be registered after the Layout's one is done.\r\n     */\n    mounted: function mounted() {\n      var _this = this;\n\n      if (!isFade) {\n        this.jump(0);\n        Splide.on('mounted resize updated', function () {\n          _this.jump(Splide.index);\n        });\n      }\n    },\n\n    /**\r\n     * Go to the given destination index.\r\n     * After arriving there, the track is jump to the new index without animation, mainly for loop mode.\r\n     *\r\n     * @param {number}  destIndex - A destination index.\r\n     *                              This can be negative or greater than slides length for reaching clones.\r\n     * @param {number}  newIndex  - An actual new index. They are always same in Slide and Rewind mode.\r\n     * @param {boolean} silently  - If true, suppress emitting events.\r\n     */\n    go: function go(destIndex, newIndex, silently) {\n      var newPosition = getTrimmedPosition(destIndex);\n      var prevIndex = Splide.index; // Prevent any actions while transitioning from the last index to the first one for jump.\n\n      if (Splide.State.is(MOVING) && isLoopPending) {\n        return;\n      }\n\n      isLoopPending = destIndex !== newIndex;\n\n      if (!silently) {\n        Splide.emit('move', newIndex, prevIndex, destIndex);\n      }\n\n      if (Math.abs(newPosition - this.position) >= 1 || isFade) {\n        Components.Transition.start(destIndex, newIndex, prevIndex, this.toCoord(newPosition), function () {\n          onTransitionEnd(destIndex, newIndex, prevIndex, silently);\n        });\n      } else {\n        if (destIndex !== prevIndex && Splide.options.trimSpace === 'move') {\n          Components.Controller.go(destIndex + destIndex - prevIndex, silently);\n        } else {\n          onTransitionEnd(destIndex, newIndex, prevIndex, silently);\n        }\n      }\n    },\n\n    /**\r\n     * Move the track to the specified index.\r\n     *\r\n     * @param {number} index - A destination index where the track jumps.\r\n     */\n    jump: function jump(index) {\n      this.translate(getTrimmedPosition(index));\n    },\n\n    /**\r\n     * Set the list position by CSS translate property.\r\n     *\r\n     * @param {number} position - A new position value.\r\n     */\n    translate: function translate(position) {\n      applyStyle(list, {\n        transform: \"translate\" + (isVertical ? 'Y' : 'X') + \"(\" + position + \"px)\"\n      });\n    },\n\n    /**\r\n     * Cancel the transition and set the list position.\r\n     * Also, loop the slider if necessary.\r\n     */\n    cancel: function cancel() {\n      if (Splide.is(LOOP)) {\n        this.shift();\n      } else {\n        // Ensure the current position.\n        this.translate(this.position);\n      }\n\n      applyStyle(list, {\n        transition: ''\n      });\n    },\n\n    /**\r\n     * Shift the slider if it exceeds borders on the edge.\r\n     */\n    shift: function shift() {\n      var position = abs(this.position);\n      var left = abs(this.toPosition(0));\n      var right = abs(this.toPosition(Splide.length));\n      var innerSize = right - left;\n\n      if (position < left) {\n        position += innerSize;\n      } else if (position > right) {\n        position -= innerSize;\n      }\n\n      this.translate(sign * position);\n    },\n\n    /**\r\n     * Trim redundant spaces on the left or right edge if necessary.\r\n     *\r\n     * @param {number} position - Position value to be trimmed.\r\n     *\r\n     * @return {number} - Trimmed position.\r\n     */\n    trim: function trim(position) {\n      if (!Splide.options.trimSpace || Splide.is(LOOP)) {\n        return position;\n      }\n\n      var edge = sign * (Layout.totalSize() - Layout.size - Layout.gap);\n      return between(position, edge, 0);\n    },\n\n    /**\r\n     * Calculate the closest slide index from the given position.\r\n     *\r\n     * @param {number} position - A position converted to an slide index.\r\n     *\r\n     * @return {number} - The closest slide index.\r\n     */\n    toIndex: function toIndex(position) {\n      var _this2 = this;\n\n      var index = 0;\n      var minDistance = Infinity;\n      Elements.getSlides(true).forEach(function (Slide) {\n        var slideIndex = Slide.index;\n        var distance = abs(_this2.toPosition(slideIndex) - position);\n\n        if (distance < minDistance) {\n          minDistance = distance;\n          index = slideIndex;\n        }\n      });\n      return index;\n    },\n\n    /**\r\n     * Return coordinates object by the given position.\r\n     *\r\n     * @param {number} position - A position value.\r\n     *\r\n     * @return {Object} - A coordinates object.\r\n     */\n    toCoord: function toCoord(position) {\n      return {\n        x: isVertical ? 0 : position,\n        y: isVertical ? position : 0\n      };\n    },\n\n    /**\r\n     * Calculate the track position by a slide index.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {Object} - Calculated position.\r\n     */\n    toPosition: function toPosition(index) {\n      var position = Layout.totalSize(index) - Layout.slideSize(index) - Layout.gap;\n      return sign * (position + this.offset(index));\n    },\n\n    /**\r\n     * Return the current offset value, considering direction.\r\n     *\r\n     * @return {number} - Offset amount.\r\n     */\n    offset: function offset(index) {\n      var focus = Splide.options.focus;\n      var slideSize = Layout.slideSize(index);\n\n      if (focus === 'center') {\n        return -(Layout.size - slideSize) / 2;\n      }\n\n      return -(parseInt(focus) || 0) * (slideSize + Layout.gap);\n    },\n\n    /**\r\n     * Return the current position.\r\n     * This returns the correct position even while transitioning by CSS.\r\n     *\r\n     * @return {number} - Current position.\r\n     */\n    get position() {\n      var prop = isVertical ? 'top' : isRTL ? 'right' : 'left';\n      return getRect(list)[prop] - (getRect(Elements.track)[prop] - Layout.padding[prop] * sign);\n    }\n\n  };\n  /**\r\n   * Called whenever slides arrive at a destination.\r\n   *\r\n   * @param {number}  destIndex - A destination index.\r\n   * @param {number}  newIndex  - A new index.\r\n   * @param {number}  prevIndex - A previous index.\r\n   * @param {boolean} silently  - If true, suppress emitting events.\r\n   */\n\n  function onTransitionEnd(destIndex, newIndex, prevIndex, silently) {\n    applyStyle(list, {\n      transition: ''\n    });\n    isLoopPending = false;\n\n    if (!isFade) {\n      Track.jump(newIndex);\n    }\n\n    if (!silently) {\n      Splide.emit('moved', newIndex, prevIndex, destIndex);\n    }\n  }\n  /**\r\n   * Convert index to the trimmed position.\r\n   *\r\n   * @return {number} - Trimmed position.\r\n   */\n\n\n  function getTrimmedPosition(index) {\n    return Track.trim(Track.toPosition(index));\n  }\n\n  return Track;\n});\n;// CONCATENATED MODULE: ./src/js/components/clones/index.js\n/**\r\n * The component for cloning some slides for \"loop\" mode of the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n/**\r\n * The component for cloning some slides for \"loop\" mode of the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const clones = (function (Splide, Components) {\n  /**\r\n   * Store information of all clones.\r\n   *\r\n   * @type {Array}\r\n   */\n  var clones = [];\n  /**\r\n   * Store the current clone count on one side.\r\n   *\r\n   * @type {number}\r\n   */\n\n  var cloneCount = 0;\n  /**\r\n   * Keep Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Clones component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Clones = {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      if (Splide.is(LOOP)) {\n        init();\n        Splide.on('refresh:before', function () {\n          _this.destroy();\n        }).on('refresh', init).on('resize', function () {\n          if (cloneCount !== getCloneCount()) {\n            // Destroy before refresh not to collect clones by the Elements component.\n            _this.destroy();\n\n            Splide.refresh();\n          }\n        });\n      }\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      dom_remove(clones);\n      clones = [];\n    },\n\n    /**\r\n     * Return all clones.\r\n     *\r\n     * @return {Element[]} - Cloned elements.\r\n     */\n    get clones() {\n      return clones;\n    },\n\n    /**\r\n     * Return clone length.\r\n     *\r\n     * @return {number} - A length of clones.\r\n     */\n    get length() {\n      return clones.length;\n    }\n\n  };\n  /**\r\n   * Initialization.\r\n   */\n\n  function init() {\n    Clones.destroy();\n    cloneCount = getCloneCount();\n    generateClones(cloneCount);\n  }\n  /**\r\n   * Generate and append/prepend clones.\r\n   *\r\n   * @param {number} count - The half number of clones.\r\n   */\n\n\n  function generateClones(count) {\n    var length = Elements.length,\n        register = Elements.register;\n\n    if (length) {\n      var slides = Elements.slides;\n\n      while (slides.length < count) {\n        slides = slides.concat(slides);\n      } // Clones after the last element.\n\n\n      slides.slice(0, count).forEach(function (elm, index) {\n        var clone = cloneDeeply(elm);\n        append(Elements.list, clone);\n        clones.push(clone);\n        register(clone, index + length, index % length);\n      }); // Clones before the first element.\n\n      slides.slice(-count).forEach(function (elm, index) {\n        var clone = cloneDeeply(elm);\n        before(clone, slides[0]);\n        clones.push(clone);\n        register(clone, index - count, (length + index - count % length) % length);\n      });\n    }\n  }\n  /**\r\n   * Return half count of clones to be generated.\r\n   * Clone count is determined by:\r\n   * - \"clones\" value in the options.\r\n   * - Number of slides that can be placed in a view in \"fixed\" mode.\r\n   * - Max pages a flick action can move.\r\n   * - Whether the slide length is enough for perPage.\r\n   *\r\n   * @return {number} - Count for clones.\r\n   */\n\n\n  function getCloneCount() {\n    var options = Splide.options;\n\n    if (options.clones) {\n      return options.clones;\n    } // Use the slide length in autoWidth mode because the number cannot be calculated.\n\n\n    var baseCount = options.autoWidth || options.autoHeight ? Elements.length : options.perPage;\n    var dimension = options.direction === TTB ? 'Height' : 'Width';\n    var fixedSize = toPixel(Splide.root, options[\"fixed\" + dimension]);\n\n    if (fixedSize) {\n      // Roughly calculate the count. This needs not to be strict.\n      baseCount = Math.ceil(Elements.track[\"client\" + dimension] / fixedSize);\n    }\n\n    return baseCount * (options.drag ? options.flickMaxPages + 1 : 1);\n  }\n  /**\r\n   * Clone deeply the given element.\r\n   *\r\n   * @param {Element} elm - An element being duplicated.\r\n   *\r\n   * @return {Node} - A cloned node(element).\r\n   */\n\n\n  function cloneDeeply(elm) {\n    var clone = elm.cloneNode(true);\n    addClass(clone, Splide.classes.clone); // ID should not be duplicated.\n\n    removeAttribute(clone, 'id');\n    return clone;\n  }\n\n  return Clones;\n});\n;// CONCATENATED MODULE: ./src/js/components/layout/directions/horizontal.js\n/**\r\n * The resolver component for horizontal layout.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The resolver component for horizontal layout.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The resolver object.\r\n */\n\n/* harmony default export */ const horizontal = (function (Splide, Components) {\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n  var Elements = Components.Elements;\n  /**\r\n   * Keep the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var root = Splide.root;\n  /**\r\n   * Keep the track element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var track;\n  /**\r\n   * Keep the latest options.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var options = Splide.options;\n  return {\n    /**\r\n     * Margin property name.\r\n     *\r\n     * @type {string}\r\n     */\n    margin: 'margin' + (options.direction === RTL ? 'Left' : 'Right'),\n\n    /**\r\n     * Always 0 because the height will be determined by inner contents.\r\n     *\r\n     * @type {number}\r\n     */\n    height: 0,\n\n    /**\r\n     * Initialization.\r\n     */\n    init: function init() {\n      this.resize();\n    },\n\n    /**\r\n     * Resize gap and padding.\r\n     * This must be called on init.\r\n     */\n    resize: function resize() {\n      options = Splide.options;\n      track = Elements.track;\n      this.gap = toPixel(root, options.gap);\n      var padding = options.padding;\n      var left = toPixel(root, padding.left || padding);\n      var right = toPixel(root, padding.right || padding);\n      this.padding = {\n        left: left,\n        right: right\n      };\n      applyStyle(track, {\n        paddingLeft: unit(left),\n        paddingRight: unit(right)\n      });\n    },\n\n    /**\r\n     * Return total width from the left of the list to the right of the slide specified by the provided index.\r\n     *\r\n     * @param {number} index - Optional. A slide index. If undefined, total width of the slider will be returned.\r\n     *\r\n     * @return {number} - Total width to the right side of the specified slide, or 0 for an invalid index.\r\n     */\n    totalWidth: function totalWidth(index) {\n      if (index === void 0) {\n        index = Splide.length - 1;\n      }\n\n      var Slide = Elements.getSlide(index);\n      var width = 0;\n\n      if (Slide) {\n        var slideRect = getRect(Slide.slide);\n        var listRect = getRect(Elements.list);\n\n        if (options.direction === RTL) {\n          width = listRect.right - slideRect.left;\n        } else {\n          width = slideRect.right - listRect.left;\n        }\n\n        width += this.gap;\n      }\n\n      return width;\n    },\n\n    /**\r\n     * Return the slide width in px.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - The slide width.\r\n     */\n    slideWidth: function slideWidth(index) {\n      if (options.autoWidth) {\n        var Slide = Elements.getSlide(index);\n        return Slide ? Slide.slide.offsetWidth : 0;\n      }\n\n      var width = options.fixedWidth || (this.width + this.gap) / options.perPage - this.gap;\n      return toPixel(root, width);\n    },\n\n    /**\r\n     * Return the slide height in px.\r\n     *\r\n     * @return {number} - The slide height.\r\n     */\n    slideHeight: function slideHeight() {\n      var height = options.height || options.fixedHeight || this.width * options.heightRatio;\n      return toPixel(root, height);\n    },\n\n    /**\r\n     * Return slider width without padding.\r\n     *\r\n     * @return {number} - Current slider width.\r\n     */\n    get width() {\n      return track.clientWidth - this.padding.left - this.padding.right;\n    }\n\n  };\n});\n;// CONCATENATED MODULE: ./src/js/components/layout/directions/vertical.js\n/**\r\n * The resolver component for vertical layout.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The resolver component for vertical layout.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The resolver object.\r\n */\n\n/* harmony default export */ const vertical = (function (Splide, Components) {\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n  var Elements = Components.Elements;\n  /**\r\n   * Keep the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var root = Splide.root;\n  /**\r\n   * Keep the track element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var track;\n  /**\r\n   * Keep the latest options.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var options;\n  return {\n    /**\r\n     * Margin property name.\r\n     *\r\n     * @type {string}\r\n     */\n    margin: 'marginBottom',\n\n    /**\r\n     * Initialization.\r\n     */\n    init: function init() {\n      this.resize();\n    },\n\n    /**\r\n     * Resize gap and padding.\r\n     * This must be called on init.\r\n     */\n    resize: function resize() {\n      options = Splide.options;\n      track = Elements.track;\n      this.gap = toPixel(root, options.gap);\n      var padding = options.padding;\n      var top = toPixel(root, padding.top || padding);\n      var bottom = toPixel(root, padding.bottom || padding);\n      this.padding = {\n        top: top,\n        bottom: bottom\n      };\n      applyStyle(track, {\n        paddingTop: unit(top),\n        paddingBottom: unit(bottom)\n      });\n    },\n\n    /**\r\n     * Return total height from the top of the list to the bottom of the slide specified by the provided index.\r\n     *\r\n     * @param {number} index - Optional. A slide index. If undefined, total height of the slider will be returned.\r\n     *\r\n     * @return {number} - Total height to the bottom of the specified slide, or 0 for an invalid index.\r\n     */\n    totalHeight: function totalHeight(index) {\n      if (index === void 0) {\n        index = Splide.length - 1;\n      }\n\n      var Slide = Elements.getSlide(index);\n\n      if (Slide) {\n        return getRect(Slide.slide).bottom - getRect(Elements.list).top + this.gap;\n      }\n\n      return 0;\n    },\n\n    /**\r\n     * Return the slide width in px.\r\n     *\r\n     * @return {number} - The slide width.\r\n     */\n    slideWidth: function slideWidth() {\n      return toPixel(root, options.fixedWidth || this.width);\n    },\n\n    /**\r\n     * Return the slide height in px.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - The slide height.\r\n     */\n    slideHeight: function slideHeight(index) {\n      if (options.autoHeight) {\n        var Slide = Elements.getSlide(index);\n        return Slide ? Slide.slide.offsetHeight : 0;\n      }\n\n      var height = options.fixedHeight || (this.height + this.gap) / options.perPage - this.gap;\n      return toPixel(root, height);\n    },\n\n    /**\r\n     * Return slider width without padding.\r\n     *\r\n     * @return {number} - Current slider width.\r\n     */\n    get width() {\n      return track.clientWidth;\n    },\n\n    /**\r\n     * Return slide height without padding.\r\n     *\r\n     * @return {number} - Slider height.\r\n     */\n    get height() {\n      var height = options.height || this.width * options.heightRatio;\n      exist(height, '\"height\" or \"heightRatio\" is missing.');\n      return toPixel(root, height) - this.padding.top - this.padding.bottom;\n    }\n\n  };\n});\n;// CONCATENATED MODULE: ./src/js/utils/time.js\n/**\r\n * A package of utility functions related with time.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Simple throttle function that controls how often the given function is executed.\r\n *\r\n * @param {function} func - A function to be throttled.\r\n * @param {number}   wait - Time in millisecond for interval of execution.\r\n *\r\n * @return {Function} - A debounced function.\r\n */\nfunction throttle(func, wait) {\n  var timeout; // Declare function by the \"function\" keyword to prevent \"this\" from being inherited.\n\n  return function () {\n    if (!timeout) {\n      timeout = setTimeout(function () {\n        func();\n        timeout = null;\n      }, wait);\n    }\n  };\n}\n/**\r\n * Custom setInterval function that provides progress rate as callback.\r\n *\r\n * @param {function} callback - A callback function fired every time the interval time passes.\r\n * @param {number}   interval - Interval duration in milliseconds.\r\n * @param {function} progress - A callback function fired whenever the progress goes.\r\n *\r\n * @return {Object} - An object containing play() and pause() functions.\r\n */\n\nfunction createInterval(callback, interval, progress) {\n  var _window = window,\n      requestAnimationFrame = _window.requestAnimationFrame;\n  var start,\n      elapse,\n      rate,\n      _pause = true;\n\n  var step = function step(timestamp) {\n    if (!_pause) {\n      if (!start) {\n        start = timestamp;\n\n        if (rate && rate < 1) {\n          start -= rate * interval;\n        }\n      }\n\n      elapse = timestamp - start;\n      rate = elapse / interval;\n\n      if (elapse >= interval) {\n        start = 0;\n        rate = 1;\n        callback();\n      }\n\n      if (progress) {\n        progress(rate);\n      }\n\n      requestAnimationFrame(step);\n    }\n  };\n\n  return {\n    pause: function pause() {\n      _pause = true;\n      start = 0;\n    },\n    play: function play(reset) {\n      start = 0;\n\n      if (reset) {\n        rate = 0;\n      }\n\n      if (_pause) {\n        _pause = false;\n        requestAnimationFrame(step);\n      }\n    }\n  };\n}\n;// CONCATENATED MODULE: ./src/js/components/layout/index.js\n/**\r\n * The component for handing slide layouts and their sizes.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n\n/**\r\n * The component for handing slide layouts and their sizes.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const layout = (function (Splide, Components) {\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n  var Elements = Components.Elements;\n  /**\r\n   * Whether the slider is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isVertical = Splide.options.direction === TTB;\n  /**\r\n   * Layout component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Layout = object_assign({\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      bind();\n      init(); // The word \"size\" means width for a horizontal slider and height for a vertical slider.\n\n      this.totalSize = isVertical ? this.totalHeight : this.totalWidth;\n      this.slideSize = isVertical ? this.slideHeight : this.slideWidth;\n    },\n\n    /**\r\n     * Destroy the component.\r\n     */\n    destroy: function destroy() {\n      removeAttribute([Elements.list, Elements.track], 'style');\n    },\n\n    /**\r\n     * Return the slider height on the vertical mode or width on the horizontal mode.\r\n     *\r\n     * @return {number}\r\n     */\n    get size() {\n      return isVertical ? this.height : this.width;\n    }\n\n  }, isVertical ? vertical(Splide, Components) : horizontal(Splide, Components));\n  /**\r\n   * Init slider styles according to options.\r\n   */\n\n  function init() {\n    Layout.init();\n    applyStyle(Splide.root, {\n      maxWidth: unit(Splide.options.width)\n    });\n    Elements.each(function (Slide) {\n      Slide.slide.style[Layout.margin] = unit(Layout.gap);\n    });\n    resize();\n  }\n  /**\r\n   * Listen the resize native event with throttle.\r\n   * Initialize when the component is mounted or options are updated.\r\n   */\n\n\n  function bind() {\n    Splide.on('resize load', throttle(function () {\n      Splide.emit('resize');\n    }, Splide.options.throttle), window).on('resize', resize).on('updated refresh', init);\n  }\n  /**\r\n   * Resize the track and slide elements.\r\n   */\n\n\n  function resize() {\n    var options = Splide.options;\n    Layout.resize();\n    applyStyle(Elements.track, {\n      height: unit(Layout.height)\n    });\n    var slideHeight = options.autoHeight ? null : unit(Layout.slideHeight());\n    Elements.each(function (Slide) {\n      applyStyle(Slide.container, {\n        height: slideHeight\n      });\n      applyStyle(Slide.slide, {\n        width: options.autoWidth ? null : unit(Layout.slideWidth(Slide.index)),\n        height: Slide.container ? null : slideHeight\n      });\n    });\n    Splide.emit('resized');\n  }\n\n  return Layout;\n});\n;// CONCATENATED MODULE: ./src/js/components/drag/index.js\n/**\r\n * The component for supporting mouse drag and swipe.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\nvar drag_abs = Math.abs;\n/**\r\n * If the absolute velocity is greater thant this value,\r\n * a slider always goes to a different slide after drag, not allowed to stay on a current slide.\r\n */\n\nvar MIN_VELOCITY = 0.1;\n/**\r\n * Adjust how much the track can be pulled on the first or last page.\r\n * The larger number this is, the farther the track moves.\r\n * This should be around 5 - 9.\r\n *\r\n * @type {number}\r\n */\n\nvar FRICTION_REDUCER = 7;\n/**\r\n * The component supporting mouse drag and swipe.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const drag = (function (Splide, Components) {\n  /**\r\n   * Store the Move component.\r\n   *\r\n   * @type {Object}\r\n   */\n  var Track = Components.Track;\n  /**\r\n   * Store the Controller component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Controller = Components.Controller;\n  /**\r\n   * Coordinate of the track on starting drag.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var startCoord;\n  /**\r\n   * Analyzed info on starting drag.\r\n   *\r\n   * @type {Object|null}\r\n   */\n\n  var startInfo;\n  /**\r\n   * Analyzed info being updated while dragging/swiping.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var currentInfo;\n  /**\r\n   * Determine whether slides are being dragged or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isDragging;\n  /**\r\n   * Whether the slider direction is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isVertical = Splide.options.direction === TTB;\n  /**\r\n   * Axis for the direction.\r\n   *\r\n   * @type {string}\r\n   */\n\n  var axis = isVertical ? 'y' : 'x';\n  /**\r\n   * Drag component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Drag = {\n    /**\r\n     * Whether dragging is disabled or not.\r\n     *\r\n     * @type {boolean}\r\n     */\n    disabled: false,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      var Elements = Components.Elements;\n      var track = Elements.track;\n      Splide.on('touchstart mousedown', start, track).on('touchmove mousemove', move, track, {\n        passive: false\n      }).on('touchend touchcancel mouseleave mouseup dragend', end, track).on('mounted refresh', function () {\n        // Prevent dragging an image or anchor itself.\n        each(Elements.list.querySelectorAll('img, a'), function (elm) {\n          Splide.off('dragstart', elm).on('dragstart', function (e) {\n            e.preventDefault();\n          }, elm, {\n            passive: false\n          });\n        });\n      }).on('mounted updated', function () {\n        _this.disabled = !Splide.options.drag;\n      });\n    }\n  };\n  /**\r\n   * Called when the track starts to be dragged.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\n\n  function start(e) {\n    if (!Drag.disabled && !isDragging) {\n      // These prams are used to evaluate whether the slider should start moving.\n      init(e);\n    }\n  }\n  /**\r\n   * Initialize parameters.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\n\n\n  function init(e) {\n    startCoord = Track.toCoord(Track.position);\n    startInfo = analyze(e, {});\n    currentInfo = startInfo;\n  }\n  /**\r\n   * Called while the track being dragged.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\n\n\n  function move(e) {\n    if (startInfo) {\n      currentInfo = analyze(e, startInfo);\n\n      if (isDragging) {\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n\n        if (!Splide.is(FADE)) {\n          var position = startCoord[axis] + currentInfo.offset[axis];\n          Track.translate(resist(position));\n        }\n      } else {\n        if (shouldMove(currentInfo)) {\n          Splide.emit('drag', startInfo);\n          isDragging = true;\n          Track.cancel(); // These params are actual drag data.\n\n          init(e);\n        }\n      }\n    }\n  }\n  /**\r\n   * Determine whether to start moving the track or not by drag angle.\r\n   *\r\n   * @param {Object} info - An information object.\r\n   *\r\n   * @return {boolean} - True if the track should be moved or false if not.\r\n   */\n\n\n  function shouldMove(_ref) {\n    var offset = _ref.offset;\n\n    if (Splide.State.is(MOVING) && Splide.options.waitForTransition) {\n      return false;\n    }\n\n    var angle = Math.atan(drag_abs(offset.y) / drag_abs(offset.x)) * 180 / Math.PI;\n\n    if (isVertical) {\n      angle = 90 - angle;\n    }\n\n    return angle < Splide.options.dragAngleThreshold;\n  }\n  /**\r\n   * Resist dragging the track on the first/last page because there is no more.\r\n   *\r\n   * @param {number} position - A position being applied to the track.\r\n   *\r\n   * @return {Object} - Adjusted position.\r\n   */\n\n\n  function resist(position) {\n    if (Splide.is(SLIDE)) {\n      var sign = Track.sign;\n\n      var _start = sign * Track.trim(Track.toPosition(0));\n\n      var _end = sign * Track.trim(Track.toPosition(Controller.edgeIndex));\n\n      position *= sign;\n\n      if (position < _start) {\n        position = _start - FRICTION_REDUCER * Math.log(_start - position);\n      } else if (position > _end) {\n        position = _end + FRICTION_REDUCER * Math.log(position - _end);\n      }\n\n      position *= sign;\n    }\n\n    return position;\n  }\n  /**\r\n   * Called when dragging ends.\r\n   */\n\n\n  function end() {\n    startInfo = null;\n\n    if (isDragging) {\n      Splide.emit('dragged', currentInfo);\n      go(currentInfo);\n      isDragging = false;\n    }\n  }\n  /**\r\n   * Go to the slide determined by the analyzed data.\r\n   *\r\n   * @param {Object} info - An info object.\r\n   */\n\n\n  function go(info) {\n    var velocity = info.velocity[axis];\n    var absV = drag_abs(velocity);\n\n    if (absV > 0) {\n      var options = Splide.options;\n      var index = Splide.index;\n      var sign = velocity < 0 ? -1 : 1;\n      var destIndex = index;\n\n      if (!Splide.is(FADE)) {\n        var destination = Track.position;\n\n        if (absV > options.flickVelocityThreshold && drag_abs(info.offset[axis]) < options.swipeDistanceThreshold) {\n          destination += sign * Math.min(absV * options.flickPower, Components.Layout.size * (options.flickMaxPages || 1));\n        }\n\n        destIndex = Track.toIndex(destination);\n      }\n      /*\r\n       * Do not allow the track to go to a previous position if there is enough velocity.\r\n       * Always use the adjacent index for the fade mode.\r\n       */\n\n\n      if (destIndex === index && absV > MIN_VELOCITY) {\n        destIndex = index + sign * Track.sign;\n      }\n\n      if (Splide.is(SLIDE)) {\n        destIndex = between(destIndex, 0, Controller.edgeIndex);\n      }\n\n      Controller.go(destIndex, options.isNavigation);\n    }\n  }\n  /**\r\n   * Analyze the given event object and return important information for handling swipe behavior.\r\n   *\r\n   * @param {Event}   e          - Touch or Mouse event object.\r\n   * @param {Object}  startInfo  - Information analyzed on start for calculating difference from the current one.\r\n   *\r\n   * @return {Object} - An object containing analyzed information, such as offset, velocity, etc.\r\n   */\n\n\n  function analyze(e, startInfo) {\n    var timeStamp = e.timeStamp,\n        touches = e.touches;\n\n    var _ref2 = touches ? touches[0] : e,\n        clientX = _ref2.clientX,\n        clientY = _ref2.clientY;\n\n    var _ref3 = startInfo.to || {},\n        _ref3$x = _ref3.x,\n        fromX = _ref3$x === void 0 ? clientX : _ref3$x,\n        _ref3$y = _ref3.y,\n        fromY = _ref3$y === void 0 ? clientY : _ref3$y;\n\n    var startTime = startInfo.time || 0;\n    var offset = {\n      x: clientX - fromX,\n      y: clientY - fromY\n    };\n    var duration = timeStamp - startTime;\n    var velocity = {\n      x: offset.x / duration,\n      y: offset.y / duration\n    };\n    return {\n      to: {\n        x: clientX,\n        y: clientY\n      },\n      offset: offset,\n      time: timeStamp,\n      velocity: velocity\n    };\n  }\n\n  return Drag;\n});\n;// CONCATENATED MODULE: ./src/js/components/click/index.js\n/**\r\n * The component for handling a click event.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The component for handling a click event.\r\n * Click should be disabled during drag/swipe.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n/* harmony default export */ const click = (function (Splide, Components) {\n  /**\r\n   * Whether click is disabled or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  var disabled = false;\n  /**\r\n   * Click component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Click = {\n    /**\r\n     * Mount only when the drag is activated and the slide type is not \"fade\".\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.drag,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('click', onClick, Components.Elements.track, {\n        capture: true\n      }).on('drag', function () {\n        disabled = true;\n      }).on('dragged', function () {\n        // Make sure the flag is released after the click event is fired.\n        setTimeout(function () {\n          disabled = false;\n        });\n      });\n    }\n  };\n  /**\r\n   * Called when a track element is clicked.\r\n   *\r\n   * @param {Event} e - A click event.\r\n   */\n\n  function onClick(e) {\n    if (disabled) {\n      e.preventDefault();\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  return Click;\n});\n;// CONCATENATED MODULE: ./src/js/components/autoplay/index.js\n/**\r\n * The component for playing slides automatically.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Set of pause flags.\r\n */\n\nvar PAUSE_FLAGS = {\n  HOVER: 1,\n  FOCUS: 2,\n  MANUAL: 3\n};\n/**\r\n * The component for playing slides automatically.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const autoplay = (function (Splide, Components, name) {\n  /**\r\n   * Store pause flags.\r\n   *\r\n   * @type {Array}\r\n   */\n  var flags = [];\n  /**\r\n   * Store an interval object.\r\n   *\r\n   * @type {Object};\r\n   */\n\n  var interval;\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Autoplay component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Autoplay = {\n    /**\r\n     * Required only when the autoplay option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.autoplay,\n\n    /**\r\n     * Called when the component is mounted.\r\n     * Note that autoplay starts only if there are slides over perPage number.\r\n     */\n    mount: function mount() {\n      var options = Splide.options;\n\n      if (Elements.slides.length > options.perPage) {\n        interval = createInterval(function () {\n          Splide.go('>');\n        }, options.interval, function (rate) {\n          Splide.emit(name + \":playing\", rate);\n\n          if (Elements.bar) {\n            applyStyle(Elements.bar, {\n              width: rate * 100 + \"%\"\n            });\n          }\n        });\n        bind();\n        this.play();\n      }\n    },\n\n    /**\r\n     * Start autoplay.\r\n     *\r\n     * @param {number} flag - A pause flag to be removed.\r\n     */\n    play: function play(flag) {\n      if (flag === void 0) {\n        flag = 0;\n      }\n\n      flags = flags.filter(function (f) {\n        return f !== flag;\n      });\n\n      if (!flags.length) {\n        Splide.emit(name + \":play\");\n        interval.play(Splide.options.resetProgress);\n      }\n    },\n\n    /**\r\n     * Pause autoplay.\r\n     * Note that Array.includes is not supported by IE.\r\n     *\r\n     * @param {number} flag - A pause flag to be added.\r\n     */\n    pause: function pause(flag) {\n      if (flag === void 0) {\n        flag = 0;\n      }\n\n      interval.pause();\n\n      if (flags.indexOf(flag) === -1) {\n        flags.push(flag);\n      }\n\n      if (flags.length === 1) {\n        Splide.emit(name + \":pause\");\n      }\n    }\n  };\n  /**\r\n   * Listen some events.\r\n   */\n\n  function bind() {\n    var options = Splide.options;\n    var sibling = Splide.sibling;\n    var elms = [Splide.root, sibling ? sibling.root : null];\n\n    if (options.pauseOnHover) {\n      switchOn(elms, 'mouseleave', PAUSE_FLAGS.HOVER, true);\n      switchOn(elms, 'mouseenter', PAUSE_FLAGS.HOVER, false);\n    }\n\n    if (options.pauseOnFocus) {\n      switchOn(elms, 'focusout', PAUSE_FLAGS.FOCUS, true);\n      switchOn(elms, 'focusin', PAUSE_FLAGS.FOCUS, false);\n    }\n\n    if (Elements.play) {\n      Splide.on('click', function () {\n        // Need to be removed a focus flag at first.\n        Autoplay.play(PAUSE_FLAGS.FOCUS);\n        Autoplay.play(PAUSE_FLAGS.MANUAL);\n      }, Elements.play);\n    }\n\n    if (Elements.pause) {\n      switchOn([Elements.pause], 'click', PAUSE_FLAGS.MANUAL, false);\n    }\n\n    Splide.on('move refresh', function () {\n      Autoplay.play();\n    }) // Rewind the timer.\n    .on('destroy', function () {\n      Autoplay.pause();\n    });\n  }\n  /**\r\n   * Play or pause on the given event.\r\n   *\r\n   * @param {Element[]} elms  - Elements.\r\n   * @param {string}    event - An event name or names.\r\n   * @param {number}    flag  - A pause flag defined on the top.\r\n   * @param {boolean}   play  - Determine whether to play or pause.\r\n   */\n\n\n  function switchOn(elms, event, flag, play) {\n    elms.forEach(function (elm) {\n      Splide.on(event, function () {\n        Autoplay[play ? 'play' : 'pause'](flag);\n      }, elm);\n    });\n  }\n\n  return Autoplay;\n});\n;// CONCATENATED MODULE: ./src/js/components/cover/index.js\n/**\r\n * The component for change an img element to background image of its wrapper.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The component for change an img element to background image of its wrapper.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const cover = (function (Splide, Components) {\n  /**\r\n   * Hold options.\r\n   *\r\n   * @type {Object}\r\n   */\n  var options = Splide.options;\n  /**\r\n   * Cover component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Cover = {\n    /**\r\n     * Required only when \"cover\" option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: options.cover,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('lazyload:loaded', function (img) {\n        cover(img, false);\n      });\n      Splide.on('mounted updated refresh', function () {\n        return apply(false);\n      });\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      apply(true);\n    }\n  };\n  /**\r\n   * Apply \"cover\" to all slides.\r\n   *\r\n   * @param {boolean} uncover - If true, \"cover\" will be clear.\r\n   */\n\n  function apply(uncover) {\n    Components.Elements.each(function (Slide) {\n      var img = child(Slide.slide, 'IMG') || child(Slide.container, 'IMG');\n\n      if (img && img.src) {\n        cover(img, uncover);\n      }\n    });\n  }\n  /**\r\n   * Set background image of the parent element, using source of the given image element.\r\n   *\r\n   * @param {Element} img     - An image element.\r\n   * @param {boolean} uncover - Reset \"cover\".\r\n   */\n\n\n  function cover(img, uncover) {\n    applyStyle(img.parentElement, {\n      background: uncover ? '' : \"center/cover no-repeat url(\\\"\" + img.src + \"\\\")\"\n    });\n    applyStyle(img, {\n      display: uncover ? '' : 'none'\n    });\n  }\n\n  return Cover;\n});\n;// CONCATENATED MODULE: ./src/js/components/arrows/path.js\n/**\r\n * Export vector path for an arrow.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Namespace definition for SVG element.\r\n *\r\n * @type {string}\r\n */\nvar XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\n/**\r\n * The arrow vector path.\r\n *\r\n * @type {number}\r\n */\n\nvar PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\n/**\r\n * SVG width and height.\r\n *\r\n * @type {number}\r\n */\n\nvar SIZE = 40;\n;// CONCATENATED MODULE: ./src/js/components/arrows/index.js\n/**\r\n * The component for appending prev/next arrows.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The component for appending prev/next arrows.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const arrows = (function (Splide, Components, name) {\n  /**\r\n   * Previous arrow element.\r\n   *\r\n   * @type {Element|undefined}\r\n   */\n  var prev;\n  /**\r\n   * Next arrow element.\r\n   *\r\n   * @type {Element|undefined}\r\n   */\n\n  var next;\n  /**\r\n   * Store the class list.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var classes = Splide.classes;\n  /**\r\n   * Hold the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var root = Splide.root;\n  /**\r\n   * Whether arrows are created programmatically or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var created;\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Arrows component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Arrows = {\n    /**\r\n     * Required when the arrows option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.arrows,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      // Attempt to get arrows from HTML source.\n      prev = Elements.arrows.prev;\n      next = Elements.arrows.next; // If arrows were not found in HTML, let's generate them.\n\n      if ((!prev || !next) && Splide.options.arrows) {\n        prev = createArrow(true);\n        next = createArrow(false);\n        created = true;\n        appendArrows();\n      }\n\n      if (prev && next) {\n        bind();\n      }\n\n      this.arrows = {\n        prev: prev,\n        next: next\n      };\n    },\n\n    /**\r\n     * Called after all components are mounted.\r\n     */\n    mounted: function mounted() {\n      Splide.emit(name + \":mounted\", prev, next);\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      removeAttribute([prev, next], 'disabled');\n\n      if (created) {\n        dom_remove(prev.parentElement);\n      }\n    }\n  };\n  /**\r\n   * Listen to native and custom events.\r\n   */\n\n  function bind() {\n    Splide.on('click', function () {\n      Splide.go('<');\n    }, prev).on('click', function () {\n      Splide.go('>');\n    }, next).on('mounted move updated refresh', updateDisabled);\n  }\n  /**\r\n   * Update a disabled attribute.\r\n   */\n\n\n  function updateDisabled() {\n    var _Components$Controlle = Components.Controller,\n        prevIndex = _Components$Controlle.prevIndex,\n        nextIndex = _Components$Controlle.nextIndex;\n    var isEnough = Splide.length > Splide.options.perPage || Splide.is(LOOP);\n    prev.disabled = prevIndex < 0 || !isEnough;\n    next.disabled = nextIndex < 0 || !isEnough;\n    Splide.emit(name + \":updated\", prev, next, prevIndex, nextIndex);\n  }\n  /**\r\n   * Create a wrapper element and append arrows.\r\n   */\n\n\n  function appendArrows() {\n    var wrapper = create('div', {\n      \"class\": classes.arrows\n    });\n    append(wrapper, prev);\n    append(wrapper, next);\n    var slider = Elements.slider;\n    var parent = Splide.options.arrows === 'slider' && slider ? slider : root;\n    before(wrapper, parent.firstElementChild);\n  }\n  /**\r\n   * Create an arrow element.\r\n   *\r\n   * @param {boolean} prev - Determine to create a prev arrow or next arrow.\r\n   *\r\n   * @return {Element} - A created arrow element.\r\n   */\n\n\n  function createArrow(prev) {\n    var arrow = \"<button class=\\\"\" + classes.arrow + \" \" + (prev ? classes.prev : classes.next) + \"\\\" type=\\\"button\\\">\" + (\"<svg xmlns=\\\"\" + XML_NAME_SPACE + \"\\\"\\tviewBox=\\\"0 0 \" + SIZE + \" \" + SIZE + \"\\\"\\twidth=\\\"\" + SIZE + \"\\\"\\theight=\\\"\" + SIZE + \"\\\">\") + (\"<path d=\\\"\" + (Splide.options.arrowPath || PATH) + \"\\\" />\");\n    return domify(arrow);\n  }\n\n  return Arrows;\n});\n;// CONCATENATED MODULE: ./src/js/components/pagination/index.js\n/**\r\n * The component for handling pagination\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The event name for updating some attributes of pagination nodes.\r\n *\r\n * @type {string}\r\n */\n\nvar ATTRIBUTES_UPDATE_EVENT = 'move.page';\n/**\r\n * The event name for recreating pagination.\r\n *\r\n * @type {string}\r\n */\n\nvar UPDATE_EVENT = 'updated.page refresh.page';\n/**\r\n * The component for handling pagination\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const pagination = (function (Splide, Components, name) {\n  /**\r\n   * Store all data for pagination.\r\n   * - list: A list element.\r\n   * - items: An array that contains objects(li, button, index, page).\r\n   *\r\n   * @type {Object}\r\n   */\n  var data = {};\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Pagination component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Pagination = {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var pagination = Splide.options.pagination;\n\n      if (pagination) {\n        data = createPagination();\n        var slider = Elements.slider;\n        var parent = pagination === 'slider' && slider ? slider : Splide.root;\n        append(parent, data.list);\n        Splide.on(ATTRIBUTES_UPDATE_EVENT, updateAttributes);\n      }\n\n      Splide.off(UPDATE_EVENT).on(UPDATE_EVENT, function () {\n        Pagination.destroy();\n\n        if (Splide.options.pagination) {\n          Pagination.mount();\n          Pagination.mounted();\n        }\n      });\n    },\n\n    /**\r\n     * Called after all components are mounted.\r\n     */\n    mounted: function mounted() {\n      if (Splide.options.pagination) {\n        var index = Splide.index;\n        Splide.emit(name + \":mounted\", data, this.getItem(index));\n        updateAttributes(index, -1);\n      }\n    },\n\n    /**\r\n     * Destroy the pagination.\r\n     * Be aware that node.remove() is not supported by IE.\r\n     */\n    destroy: function destroy() {\n      dom_remove(data.list);\n\n      if (data.items) {\n        data.items.forEach(function (item) {\n          Splide.off('click', item.button);\n        });\n      } // Do not remove UPDATE_EVENT to recreate pagination if needed.\n\n\n      Splide.off(ATTRIBUTES_UPDATE_EVENT);\n      data = {};\n    },\n\n    /**\r\n     * Return an item by index.\r\n     *\r\n     * @param {number} index - A slide index.\r\n     *\r\n     * @return {Object|undefined} - An item object on success or undefined on failure.\r\n     */\n    getItem: function getItem(index) {\n      return data.items[Components.Controller.toPage(index)];\n    },\n\n    /**\r\n     * Return object containing pagination data.\r\n     *\r\n     * @return {Object} - Pagination data including list and items.\r\n     */\n    get data() {\n      return data;\n    }\n\n  };\n  /**\r\n   * Update attributes.\r\n   *\r\n   * @param {number} index     - Active index.\r\n   * @param {number} prevIndex - Prev index.\r\n   */\n\n  function updateAttributes(index, prevIndex) {\n    var prev = Pagination.getItem(prevIndex);\n    var curr = Pagination.getItem(index);\n    var active = STATUS_CLASSES.active;\n\n    if (prev) {\n      removeClass(prev.button, active);\n    }\n\n    if (curr) {\n      addClass(curr.button, active);\n    }\n\n    Splide.emit(name + \":updated\", data, prev, curr);\n  }\n  /**\r\n   * Create a wrapper and button elements.\r\n   *\r\n   * @return {Object} - An object contains all data.\r\n   */\n\n\n  function createPagination() {\n    var options = Splide.options;\n    var classes = Splide.classes;\n    var list = create('ul', {\n      \"class\": classes.pagination\n    });\n    var items = Elements.getSlides(false).filter(function (Slide) {\n      return options.focus !== false || Slide.index % options.perPage === 0;\n    }).map(function (Slide, page) {\n      var li = create('li', {});\n      var button = create('button', {\n        \"class\": classes.page,\n        type: 'button'\n      });\n      append(li, button);\n      append(list, li);\n      Splide.on('click', function () {\n        Splide.go(\">\" + page);\n      }, button);\n      return {\n        li: li,\n        button: button,\n        page: page,\n        Slides: Elements.getSlidesByPage(page)\n      };\n    });\n    return {\n      list: list,\n      items: items\n    };\n  }\n\n  return Pagination;\n});\n;// CONCATENATED MODULE: ./src/js/components/lazyload/index.js\n/**\r\n * The component for loading slider images lazily.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The name for a data attribute of src.\r\n *\r\n * @type {string}\r\n */\n\nvar SRC_DATA_NAME = 'data-splide-lazy';\n/**\r\n * The name for a data attribute of srcset.\r\n *\r\n * @type {string}\r\n */\n\nvar SRCSET_DATA_NAME = 'data-splide-lazy-srcset';\n/**\r\n * The component for loading slider images lazily.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const lazyload = (function (Splide, Components, name) {\n  /**\r\n   * Next index for sequential loading.\r\n   *\r\n   * @type {number}\r\n   */\n  var nextIndex;\n  /**\r\n   * Store objects containing an img element and a Slide object.\r\n   *\r\n   * @type {Object[]}\r\n   */\n\n  var images;\n  /**\r\n   * Store the options.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var options = Splide.options;\n  /**\r\n   * Whether to load images sequentially or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isSequential = options.lazyLoad === 'sequential';\n  /**\r\n   * Lazyload component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Lazyload = {\n    /**\r\n     * Mount only when the lazyload option is provided.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: options.lazyLoad,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('mounted refresh', function () {\n        init();\n        Components.Elements.each(function (Slide) {\n          each(Slide.slide.querySelectorAll(\"[\" + SRC_DATA_NAME + \"], [\" + SRCSET_DATA_NAME + \"]\"), function (img) {\n            if (!img.src && !img.srcset) {\n              images.push({\n                img: img,\n                Slide: Slide\n              });\n              applyStyle(img, {\n                display: 'none'\n              });\n            }\n          });\n        });\n\n        if (isSequential) {\n          loadNext();\n        }\n      });\n\n      if (!isSequential) {\n        Splide.on(\"mounted refresh moved.\" + name, check);\n      }\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: init\n  };\n  /**\r\n   * Initialize parameters.\r\n   */\n\n  function init() {\n    images = [];\n    nextIndex = 0;\n  }\n  /**\r\n   * Check how close each image is from the active slide and\r\n   * determine whether to start loading or not, according to the distance.\r\n   *\r\n   * @param {number} index - Current index.\r\n   */\n\n\n  function check(index) {\n    index = isNaN(index) ? Splide.index : index;\n    images = images.filter(function (image) {\n      if (image.Slide.isWithin(index, options.perPage * (options.preloadPages + 1))) {\n        load(image.img, image.Slide);\n        return false;\n      }\n\n      return true;\n    }); // Unbind if all images are loaded.\n\n    if (!images[0]) {\n      Splide.off(\"moved.\" + name);\n    }\n  }\n  /**\r\n   * Start loading an image.\r\n   * Creating a clone of the image element since setting src attribute directly to it\r\n   * often occurs 'hitch', blocking some other processes of a browser.\r\n   *\r\n   * @param {Element} img   - An image element.\r\n   * @param {Object}  Slide - A Slide object.\r\n   */\n\n\n  function load(img, Slide) {\n    addClass(Slide.slide, STATUS_CLASSES.loading);\n    var spinner = create('span', {\n      \"class\": Splide.classes.spinner\n    });\n    append(img.parentElement, spinner);\n\n    img.onload = function () {\n      loaded(img, spinner, Slide, false);\n    };\n\n    img.onerror = function () {\n      loaded(img, spinner, Slide, true);\n    };\n\n    setAttribute(img, 'srcset', getAttribute(img, SRCSET_DATA_NAME) || '');\n    setAttribute(img, 'src', getAttribute(img, SRC_DATA_NAME) || '');\n  }\n  /**\r\n   * Start loading a next image in images array.\r\n   */\n\n\n  function loadNext() {\n    if (nextIndex < images.length) {\n      var image = images[nextIndex];\n      load(image.img, image.Slide);\n    }\n\n    nextIndex++;\n  }\n  /**\r\n   * Called just after the image was loaded or loading was aborted by some error.\r\n   *\r\n   * @param {Element} img     - An image element.\r\n   * @param {Element} spinner - A spinner element.\r\n   * @param {Object}  Slide   - A Slide object.\r\n   * @param {boolean} error   - True if the image was loaded successfully or false on error.\r\n   */\n\n\n  function loaded(img, spinner, Slide, error) {\n    removeClass(Slide.slide, STATUS_CLASSES.loading);\n\n    if (!error) {\n      dom_remove(spinner);\n      applyStyle(img, {\n        display: ''\n      });\n      Splide.emit(name + \":loaded\", img).emit('resize');\n    }\n\n    if (isSequential) {\n      loadNext();\n    }\n  }\n\n  return Lazyload;\n});\n;// CONCATENATED MODULE: ./src/js/constants/a11y.js\n/**\r\n * Export aria attribute names.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Attribute name for aria-current.\r\n *\r\n * @type {string}\r\n */\nvar ARIA_CURRENRT = 'aria-current';\n/**\r\n * Attribute name for aria-control.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_CONTROLS = 'aria-controls';\n/**\r\n * Attribute name for aria-control.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_LABEL = 'aria-label';\n/**\r\n * Attribute name for aria-labelledby.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_LABELLEDBY = 'aria-labelledby';\n/**\r\n * Attribute name for aria-hidden.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_HIDDEN = 'aria-hidden';\n/**\r\n * Attribute name for tab-index.\r\n *\r\n * @type {string}\r\n */\n\nvar TAB_INDEX = 'tabindex';\n;// CONCATENATED MODULE: ./src/js/components/keyboard/index.js\n/**\r\n * The component for controlling slides via keyboard.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Map a key to a slide control.\r\n *\r\n * @type {Object}\r\n */\n\nvar KEY_MAP = {\n  ltr: {\n    ArrowLeft: '<',\n    ArrowRight: '>',\n    // For IE.\n    Left: '<',\n    Right: '>'\n  },\n  rtl: {\n    ArrowLeft: '>',\n    ArrowRight: '<',\n    // For IE.\n    Left: '>',\n    Right: '<'\n  },\n  ttb: {\n    ArrowUp: '<',\n    ArrowDown: '>',\n    // For IE.\n    Up: '<',\n    Down: '>'\n  }\n};\n/**\r\n * The component for controlling slides via keyboard.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const keyboard = (function (Splide) {\n  /**\r\n   * Hold the target element.\r\n   *\r\n   * @type {Element|Document|undefined}\r\n   */\n  var target;\n  return {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('mounted updated', function () {\n        var options = Splide.options;\n        var root = Splide.root;\n        var map = KEY_MAP[options.direction];\n        var keyboard = options.keyboard;\n\n        if (target) {\n          Splide.off('keydown', target);\n          removeAttribute(root, TAB_INDEX);\n        }\n\n        if (keyboard) {\n          if (keyboard === 'focused') {\n            target = root;\n            setAttribute(root, TAB_INDEX, 0);\n          } else {\n            target = document;\n          }\n\n          Splide.on('keydown', function (e) {\n            if (map[e.key]) {\n              Splide.go(map[e.key]);\n            }\n          }, target);\n        }\n      });\n    }\n  };\n});\n;// CONCATENATED MODULE: ./src/js/components/a11y/index.js\n/**\r\n * The component for enhancing accessibility.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The component for enhancing accessibility.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const a11y = (function (Splide, Components) {\n  /**\r\n   * Hold a i18n object.\r\n   *\r\n   * @type {Object}\r\n   */\n  var i18n = Splide.i18n;\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * All attributes related with A11y.\r\n   *\r\n   * @type {string[]}\r\n   */\n\n  var allAttributes = [ARIA_HIDDEN, TAB_INDEX, ARIA_CONTROLS, ARIA_LABEL, ARIA_CURRENRT, 'role'];\n  /**\r\n   * A11y component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var A11y = {\n    /**\r\n     * Required only when the accessibility option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.accessibility,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('visible', function (Slide) {\n        updateSlide(Slide.slide, true);\n      }).on('hidden', function (Slide) {\n        updateSlide(Slide.slide, false);\n      }).on('arrows:mounted', initArrows).on('arrows:updated', updateArrows).on('pagination:mounted', initPagination).on('pagination:updated', updatePagination).on('refresh', function () {\n        removeAttribute(Components.Clones.clones, allAttributes);\n      });\n\n      if (Splide.options.isNavigation) {\n        Splide.on('navigation:mounted navigation:updated', initNavigation).on('active', function (Slide) {\n          updateNavigation(Slide, true);\n        }).on('inactive', function (Slide) {\n          updateNavigation(Slide, false);\n        });\n      }\n\n      initAutoplay();\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      var Arrows = Components.Arrows;\n      var arrows = Arrows ? Arrows.arrows : {};\n      removeAttribute(Elements.slides.concat([arrows.prev, arrows.next, Elements.play, Elements.pause]), allAttributes);\n    }\n  };\n  /**\r\n   * Update slide attributes when it gets visible or hidden.\r\n   *\r\n   * @param {Element} slide   - A slide element.\r\n   * @param {Boolean} visible - True when the slide gets visible, or false when hidden.\r\n   */\n\n  function updateSlide(slide, visible) {\n    setAttribute(slide, ARIA_HIDDEN, !visible);\n\n    if (Splide.options.slideFocus) {\n      setAttribute(slide, TAB_INDEX, visible ? 0 : -1);\n    }\n  }\n  /**\r\n   * Initialize arrows if they are available.\r\n   * Append screen reader elements and add aria-controls attribute.\r\n   *\r\n   * @param {Element} prev - Previous arrow element.\r\n   * @param {Element} next - Next arrow element.\r\n   */\n\n\n  function initArrows(prev, next) {\n    var controls = Elements.track.id;\n    setAttribute(prev, ARIA_CONTROLS, controls);\n    setAttribute(next, ARIA_CONTROLS, controls);\n  }\n  /**\r\n   * Update arrow attributes.\r\n   *\r\n   * @param {Element} prev      - Previous arrow element.\r\n   * @param {Element} next      - Next arrow element.\r\n   * @param {number}  prevIndex - Previous slide index or -1 when there is no precede slide.\r\n   * @param {number}  nextIndex - Next slide index or -1 when there is no next slide.\r\n   */\n\n\n  function updateArrows(prev, next, prevIndex, nextIndex) {\n    var index = Splide.index;\n    var prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    var nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n  }\n  /**\r\n   * Initialize pagination if it's available.\r\n   * Append a screen reader element and add aria-controls/label attribute to each item.\r\n   *\r\n   * @param {Object} data       - Data object containing all items.\r\n   * @param {Object} activeItem - An initial active item.\r\n   */\n\n\n  function initPagination(data, activeItem) {\n    if (activeItem) {\n      setAttribute(activeItem.button, ARIA_CURRENRT, true);\n    }\n\n    data.items.forEach(function (item) {\n      var options = Splide.options;\n      var text = options.focus === false && options.perPage > 1 ? i18n.pageX : i18n.slideX;\n      var label = sprintf(text, item.page + 1);\n      var button = item.button;\n      var controls = item.Slides.map(function (Slide) {\n        return Slide.slide.id;\n      });\n      setAttribute(button, ARIA_CONTROLS, controls.join(' '));\n      setAttribute(button, ARIA_LABEL, label);\n    });\n  }\n  /**\r\n   * Update pagination attributes.\r\n   *\r\n   * @param {Object}  data - Data object containing all items.\r\n   * @param {Element} prev - A previous active element.\r\n   * @param {Element} curr - A current active element.\r\n   */\n\n\n  function updatePagination(data, prev, curr) {\n    if (prev) {\n      removeAttribute(prev.button, ARIA_CURRENRT);\n    }\n\n    if (curr) {\n      setAttribute(curr.button, ARIA_CURRENRT, true);\n    }\n  }\n  /**\r\n   * Initialize autoplay buttons.\r\n   */\n\n\n  function initAutoplay() {\n    ['play', 'pause'].forEach(function (name) {\n      var elm = Elements[name];\n\n      if (elm) {\n        if (!isButton(elm)) {\n          setAttribute(elm, 'role', 'button');\n        }\n\n        setAttribute(elm, ARIA_CONTROLS, Elements.track.id);\n        setAttribute(elm, ARIA_LABEL, i18n[name]);\n      }\n    });\n  }\n  /**\r\n   * Initialize navigation slider.\r\n   * Add button role, aria-label, aria-controls to slide elements and append screen reader text to them.\r\n   *\r\n   * @param {Splide} main - A main Splide instance.\r\n   */\n\n\n  function initNavigation(main) {\n    Elements.each(function (Slide) {\n      var slide = Slide.slide;\n      var realIndex = Slide.realIndex;\n\n      if (!isButton(slide)) {\n        setAttribute(slide, 'role', 'button');\n      }\n\n      var slideIndex = realIndex > -1 ? realIndex : Slide.index;\n      var label = sprintf(i18n.slideX, slideIndex + 1);\n      var mainSlide = main.Components.Elements.getSlide(slideIndex);\n      setAttribute(slide, ARIA_LABEL, label);\n\n      if (mainSlide) {\n        setAttribute(slide, ARIA_CONTROLS, mainSlide.slide.id);\n      }\n    });\n  }\n  /**\r\n   * Update navigation attributes.\r\n   *\r\n   * @param {Object}  Slide  - A target Slide object.\r\n   * @param {boolean} active - True if the slide is active or false if inactive.\r\n   */\n\n\n  function updateNavigation(_ref, active) {\n    var slide = _ref.slide;\n\n    if (active) {\n      setAttribute(slide, ARIA_CURRENRT, true);\n    } else {\n      removeAttribute(slide, ARIA_CURRENRT);\n    }\n  }\n  /**\r\n   * Check if the given element is button or not.\r\n   *\r\n   * @param {Element} elm - An element to be checked.\r\n   *\r\n   * @return {boolean} - True if the given element is button.\r\n   */\n\n\n  function isButton(elm) {\n    return elm.tagName === 'BUTTON';\n  }\n\n  return A11y;\n});\n;// CONCATENATED MODULE: ./src/js/components/sync/index.js\n/**\r\n * The component for synchronizing a slider with another.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The event name for sync.\r\n *\r\n * @type {string}\r\n */\n\nvar SYNC_EVENT = 'move.sync';\n/**\r\n * The event names for click navigation.\r\n * @type {string}\r\n */\n\nvar CLICK_EVENTS = 'mouseup touchend';\n/**\r\n * The keys for triggering the navigation button.\r\n *\r\n * @type {String[]}\r\n */\n\nvar TRIGGER_KEYS = [' ', 'Enter', 'Spacebar'];\n/**\r\n * The component for synchronizing a slider with another.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const sync = (function (Splide) {\n  /**\r\n   * Keep the sibling Splide instance.\r\n   *\r\n   * @type {Splide}\r\n   */\n  var sibling = Splide.sibling;\n  /**\r\n   * Whether the sibling slider is navigation or not.\r\n   *\r\n   * @type {Splide|boolean}\r\n   */\n\n  var isNavigation = sibling && sibling.options.isNavigation;\n  /**\r\n   * Layout component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Sync = {\n    /**\r\n     * Required only when the sub slider is available.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: !!sibling,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      syncMain();\n      syncSibling();\n\n      if (isNavigation) {\n        bind();\n        Splide.on('refresh', function () {\n          setTimeout(function () {\n            bind();\n            sibling.emit('navigation:updated', Splide);\n          });\n        });\n      }\n    },\n\n    /**\r\n     * Called after all components are mounted.\r\n     */\n    mounted: function mounted() {\n      if (isNavigation) {\n        sibling.emit('navigation:mounted', Splide);\n      }\n    }\n  };\n  /**\r\n   * Listen the primary slider event to move secondary one.\r\n   * Must unbind a handler at first to avoid infinite loop.\r\n   */\n\n  function syncMain() {\n    Splide.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\n      sibling.off(SYNC_EVENT).go(sibling.is(LOOP) ? destIndex : newIndex, false);\n      syncSibling();\n    });\n  }\n  /**\r\n   * Listen the secondary slider event to move primary one.\r\n   * Must unbind a handler at first to avoid infinite loop.\r\n   */\n\n\n  function syncSibling() {\n    sibling.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\n      Splide.off(SYNC_EVENT).go(Splide.is(LOOP) ? destIndex : newIndex, false);\n      syncMain();\n    });\n  }\n  /**\r\n   * Listen some events on each slide.\r\n   */\n\n\n  function bind() {\n    sibling.Components.Elements.each(function (_ref) {\n      var slide = _ref.slide,\n          index = _ref.index;\n\n      /*\r\n       * Listen mouseup and touchend events to handle click.\r\n       */\n      Splide.off(CLICK_EVENTS, slide).on(CLICK_EVENTS, function (e) {\n        // Ignore a middle or right click.\n        if (!e.button || e.button === 0) {\n          moveSibling(index);\n        }\n      }, slide);\n      /*\r\n       * Subscribe keyup to handle Enter and Space key.\r\n       * Note that Array.includes is not supported by IE.\r\n       */\n\n      Splide.off('keyup', slide).on('keyup', function (e) {\n        if (TRIGGER_KEYS.indexOf(e.key) > -1) {\n          e.preventDefault();\n          moveSibling(index);\n        }\n      }, slide, {\n        passive: false\n      });\n    });\n  }\n  /**\r\n   * Move the sibling to the given index.\r\n   * Need to check \"IDLE\" status because slides can be moving by Drag component.\r\n   *\r\n   * @param {number} index - Target index.\r\n   */\n\n\n  function moveSibling(index) {\n    if (Splide.State.is(IDLE)) {\n      sibling.go(index);\n    }\n  }\n\n  return Sync;\n});\n;// CONCATENATED MODULE: ./src/js/components/breakpoints/index.js\n/**\r\n * The component for updating options according to a current window width.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Interval time for throttle.\r\n *\r\n * @type {number}\r\n */\n\nvar THROTTLE = 50;\n/**\r\n * The component for updating options according to a current window width.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ const breakpoints = (function (Splide) {\n  /**\r\n   * Store breakpoints.\r\n   *\r\n   * @type {Object|boolean}\r\n   */\n  var breakpoints = Splide.options.breakpoints;\n  /**\r\n   * The check function whose frequency of call is reduced.\r\n   *\r\n   * @type {Function}\r\n   */\n\n  var throttledCheck = throttle(check, THROTTLE);\n  /**\r\n   * Keep initial options.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var initialOptions;\n  /**\r\n   * An array containing objects of point and MediaQueryList.\r\n   *\r\n   * @type {Object[]}\r\n   */\n\n  var map = [];\n  /**\r\n   * Hold the previous breakpoint.\r\n   *\r\n   * @type {number|undefined}\r\n   */\n\n  var prevPoint;\n  /**\r\n   * Breakpoints component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Breakpoints = {\n    /**\r\n     * Required only when the breakpoints definition is provided and browser supports matchMedia.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: breakpoints && matchMedia,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      map = Object.keys(breakpoints).sort(function (n, m) {\n        return +n - +m;\n      }).map(function (point) {\n        return {\n          point: point,\n          mql: matchMedia(\"(max-width:\" + point + \"px)\")\n        };\n      });\n      /*\r\n       * To keep monitoring resize event after destruction without \"completely\",\r\n       * use native addEventListener instead of Splide.on.\r\n       */\n\n      this.destroy(true);\n      addEventListener('resize', throttledCheck); // Keep initial options to apply them when no breakpoint matches.\n\n      initialOptions = Splide.options;\n      check();\n    },\n\n    /**\r\n     * Destroy.\r\n     *\r\n     * @param {boolean} completely - Whether to destroy Splide completely.\r\n     */\n    destroy: function destroy(completely) {\n      if (completely) {\n        removeEventListener('resize', throttledCheck);\n      }\n    }\n  };\n  /**\r\n   * Check the breakpoint.\r\n   */\n\n  function check() {\n    var point = getPoint();\n\n    if (point !== prevPoint) {\n      prevPoint = point;\n      var State = Splide.State;\n      var options = breakpoints[point] || initialOptions;\n      var destroy = options.destroy;\n\n      if (destroy) {\n        Splide.options = initialOptions;\n        Splide.destroy(destroy === 'completely');\n      } else {\n        if (State.is(DESTROYED)) {\n          Splide.mount();\n        }\n\n        Splide.options = options;\n      }\n    }\n  }\n  /**\r\n   * Return the breakpoint matching current window width.\r\n   * Note that Array.prototype.find is not supported by IE.\r\n   *\r\n   * @return {number|string} - A breakpoint as number or string. -1 if no point matches.\r\n   */\n\n\n  function getPoint() {\n    var item = map.filter(function (item) {\n      return item.mql.matches;\n    })[0];\n    return item ? item.point : -1;\n  }\n\n  return Breakpoints;\n});\n;// CONCATENATED MODULE: ./src/js/components/index.js\n/**\r\n * Export components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar COMPLETE = {\n  Options: options,\n  Breakpoints: breakpoints,\n  Controller: controller,\n  Elements: components_elements,\n  Track: track,\n  Clones: clones,\n  Layout: layout,\n  Drag: drag,\n  Click: click,\n  Autoplay: autoplay,\n  Cover: cover,\n  Arrows: arrows,\n  Pagination: pagination,\n  LazyLoad: lazyload,\n  Keyboard: keyboard,\n  Sync: sync,\n  A11y: a11y\n};\nvar LIGHT = {\n  Options: options,\n  Controller: controller,\n  Elements: components_elements,\n  Track: track,\n  Clones: clones,\n  Layout: layout,\n  Drag: drag,\n  Click: click,\n  Arrows: arrows,\n  Pagination: pagination,\n  A11y: a11y\n};\n;// CONCATENATED MODULE: ./build/module/module.js\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\r\n * Export Splide class for import.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Export Splide class for import from other projects.\r\n */\n\nvar module_Splide = /*#__PURE__*/function (_Core) {\n  _inheritsLoose(Splide, _Core);\n\n  function Splide(root, options) {\n    return _Core.call(this, root, options, COMPLETE) || this;\n  }\n\n  return Splide;\n}(Splide);\n\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(311);\n/******/ })()\n;\n});","/**\n * @author  Andrey Kharanenka, a.khoronenko@lovata.com, LOVATA Group\n */\nexport default new class UrlGeneration {\n  constructor() {\n    this.sBaseURL = `${location.origin}${location.pathname}`;\n    this.init();\n  }\n\n  init() {\n    this.sSearchString = window.location.search.substring(1);\n    this.obParamList = {};\n    let arPartList = this.sSearchString.split('&');\n    arPartList.forEach((sParam) => {\n      let iPosition = sParam.indexOf(\"=\");\n      if (iPosition < 0) {\n        return;\n      }\n\n      let sFiled = sParam.substring(0, iPosition),\n        sValue = sParam.substring(iPosition + 1);\n      if (!sFiled && !sValue) {\n        return;\n      }\n\n      this.obParamList[sFiled] = sValue.split('|');\n    });\n  }\n\n  clear() {\n    this.obParamList = {};\n\n    history.pushState(null, null, `${this.sBaseURL}`);\n  }\n\n  update() {\n    this.generateSearchString();\n\n    if (Object.keys(this.obParamList).length > 0) {\n      history.pushState(null, null, `${this.sBaseURL}?${this.sSearchString}`);\n    } else {\n      history.pushState(null, null, `${this.sBaseURL}`);\n    }\n  }\n\n  generateSearchString() {\n    let arFieldList = Object.keys(this.obParamList);\n\n    this.sSearchString = '';\n    arFieldList.forEach((sField) => {\n      if (this.sSearchString.length > 0) {\n        this.sSearchString += '&'\n      }\n\n      this.sSearchString += `${sField}=${this.obParamList[sField].join('|')}`;\n    });\n  }\n\n  /**\n   * Set field value in URL\n   * @param sFiled\n   * @param obValue\n   */\n  set(sFiled, obValue) {\n    if (!sFiled || !obValue) {\n      return;\n    }\n\n    if (typeof obValue == 'string') {\n      obValue = [obValue];\n    }\n\n    this.obParamList[sFiled] = obValue;\n  }\n\n  /**\n   * Remove field value from URL\n   * @param {string} sFiled\n   */\n  remove(sFiled) {\n    if (!sFiled || !this.obParamList.hasOwnProperty(sFiled)) {\n      return;\n    }\n\n    delete this.obParamList[sFiled];\n  }\n}","require('../../partials/slider/product/product');\r\n\r\nimport UrlGeneration from '@lovata/url-generation';\r\n\r\nexport default new class Offer {\r\n    constructor() {\r\n        this.size = 'input[name=\"size\"]';\r\n        this.cartButton = 'button[data-cart=\"true\"]';\r\n        this.offerInput = 'input[name=\"offer_id\"]';\r\n        this.basketWrap = '#basketWrap';\r\n        this.cartWrap = '#cartWrap';\r\n\r\n        this.xhr = null;\r\n\r\n        this.init();\r\n    }\r\n    init () {\r\n        $(this.size).on('change', (target) => {\r\n            target.preventDefault();\r\n\r\n            $.oc.stripeLoadIndicator.show();\r\n\r\n            if (this.xhr) {\r\n                this.xhr.abort()\r\n            }\r\n\r\n            let input = $(target.currentTarget),\r\n                offer = input.val();\r\n\r\n            UrlGeneration.init();\r\n            UrlGeneration.set('offer', [offer]);\r\n            UrlGeneration.update();\r\n\r\n            this.xhr = $.request('ProductList::onAjaxRequest', {\r\n                update: {\r\n                    'product/price/price': '#priceWrap',\r\n                },\r\n                success: function (response) {\r\n                    this.success(response)\r\n                },\r\n                complete: () => $.oc.stripeLoadIndicator.hide()\r\n            })\r\n        })\r\n\r\n        $(this.cartButton).on('click', (target) => {\r\n            target.preventDefault();\r\n\r\n            $.oc.stripeLoadIndicator.show();\r\n\r\n            if (this.xhr) {\r\n                this.xhr.abort()\r\n            }\r\n\r\n            let _self = this,\r\n                button = $(target.currentTarget),\r\n                offer = $(this.offerInput).val();\r\n\r\n            if (!offer) {\r\n                offer = $(this.offerInput).val()\r\n            }\r\n\r\n            this.xhr = $.request('Cart::onAdd', {\r\n                data: { 'cart': [{\r\n                    'offer_id': offer,\r\n                    'quantity': 1\r\n                }]},\r\n                success: () => {\r\n                    $.request('ProductList::onAjaxRequest', {\r\n                        update: {\r\n                            'block/basket/basket': this.basketWrap,\r\n                            'product/button/cart': this.cartWrap\r\n                        },\r\n                        success: function (response) {\r\n                            this.success(response);\r\n                            _self.init();\r\n                        },\r\n                        complete: () => $.oc.stripeLoadIndicator.hide()\r\n                    });\r\n                },\r\n                error: (response) => {\r\n                    console.log(response);\r\n                }\r\n            })\r\n        })\r\n    }\r\n}"],"sourceRoot":""}